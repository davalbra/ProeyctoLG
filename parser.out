Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    ARGUMENTS
    AWAIT
    BOOLEANO
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVIDIR
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FLOTANTE
    FOR
    ICORCHETE
    IF
    IGUALDADESTRICTA
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MAS
    MASIGUAL
    MAYORIGUAL
    MAYOR_QUE
    MENORIGUAL
    MENOR_QUE
    MENOS
    MENOSIGUAL
    METODO_ADD_SET
    METODO_HAS
    METODO_POP_ARRAY
    METODO_PUSH_ARRAY
    METODO_SET
    METODO_SIZE_SET
    MODULO
    MULTIPLICAR
    NEGACION
    NEW
    NOESIGUAL
    OR
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTOCOMA
    RETURN
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> asignar_variable
Rule 2     expresion -> FUNCTIONS
Rule 3     asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos
Rule 4     tipos_datos -> booleano_tipo
Rule 5     tipos_datos -> CADENA
Rule 6     tipos_datos -> NUMERO
Rule 7     tipos_datos -> NULL
Rule 8     tipo_variable -> VAR
Rule 9     tipo_variable -> LET
Rule 10    tipo_variable -> CONST
Rule 11    booleano_tipo -> TRUE
Rule 12    booleano_tipo -> FALSE
Rule 13    cadenas_caracteres -> CADENA
Rule 14    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 15    MASPARAMETROS -> PARAMETROS
Rule 16    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 17    PARAMETROS -> tipos_datos
Rule 18    PARAMETROS -> VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
ARGUMENTS            : 
ASIGNAR              : 3
AWAIT                : 
BOOLEANO             : 
BREAK                : 
CADENA               : 5 13
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 16
COMENTARIO           : 
CONST                : 10
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 
DIVISIONIGUAL        : 
DLLAVE               : 14
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 12
FINALLY              : 
FLOTANTE             : 
FOR                  : 
FUNCTION             : 14
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 
ILLAVE               : 14
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 9
LPAREN               : 14
MAS                  : 
MASIGUAL             : 
MAYORIGUAL           : 
MAYOR_QUE            : 
MENORIGUAL           : 
MENOR_QUE            : 
MENOS                : 
MENOSIGUAL           : 
METODO_ADD_SET       : 
METODO_HAS           : 
METODO_POP_ARRAY     : 
METODO_PUSH_ARRAY    : 
METODO_SET           : 
METODO_SIZE_SET      : 
MODULO               : 
MULTIPLICAR          : 
NEGACION             : 
NEW                  : 
NOESIGUAL            : 
NULL                 : 7
NUMERO               : 6
OR                   : 
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTOCOMA            : 
RETURN               : 
RPAREN               : 14
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 11
TRY                  : 
TYPEOF               : 
VAR                  : 8
VARIABLE             : 3 14 18
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

FUNCTIONS            : 2
MASPARAMETROS        : 14 16
PARAMETROS           : 15 16
asignar_variable     : 1
booleano_tipo        : 4
cadenas_caracteres   : 
expresion            : 0
tipo_variable        : 3
tipos_datos          : 3 17

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . asignar_variable
    (2) expresion -> . FUNCTIONS
    (3) asignar_variable -> . tipo_variable VARIABLE ASIGNAR tipos_datos
    (14) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (8) tipo_variable -> . VAR
    (9) tipo_variable -> . LET
    (10) tipo_variable -> . CONST

    FUNCTION        shift and go to state 5
    VAR             shift and go to state 6
    LET             shift and go to state 7
    CONST           shift and go to state 8

    expresion                      shift and go to state 1
    asignar_variable               shift and go to state 2
    FUNCTIONS                      shift and go to state 3
    tipo_variable                  shift and go to state 4

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> asignar_variable .

    $end            reduce using rule 1 (expresion -> asignar_variable .)


state 3

    (2) expresion -> FUNCTIONS .

    $end            reduce using rule 2 (expresion -> FUNCTIONS .)


state 4

    (3) asignar_variable -> tipo_variable . VARIABLE ASIGNAR tipos_datos

    VARIABLE        shift and go to state 9


state 5

    (14) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    VARIABLE        shift and go to state 10


state 6

    (8) tipo_variable -> VAR .

    VARIABLE        reduce using rule 8 (tipo_variable -> VAR .)


state 7

    (9) tipo_variable -> LET .

    VARIABLE        reduce using rule 9 (tipo_variable -> LET .)


state 8

    (10) tipo_variable -> CONST .

    VARIABLE        reduce using rule 10 (tipo_variable -> CONST .)


state 9

    (3) asignar_variable -> tipo_variable VARIABLE . ASIGNAR tipos_datos

    ASIGNAR         shift and go to state 11


state 10

    (14) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    LPAREN          shift and go to state 12


state 11

    (3) asignar_variable -> tipo_variable VARIABLE ASIGNAR . tipos_datos
    (4) tipos_datos -> . booleano_tipo
    (5) tipos_datos -> . CADENA
    (6) tipos_datos -> . NUMERO
    (7) tipos_datos -> . NULL
    (11) booleano_tipo -> . TRUE
    (12) booleano_tipo -> . FALSE

    CADENA          shift and go to state 15
    NUMERO          shift and go to state 16
    NULL            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    tipos_datos                    shift and go to state 13
    booleano_tipo                  shift and go to state 14

state 12

    (14) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (15) MASPARAMETROS -> . PARAMETROS
    (16) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (17) PARAMETROS -> . tipos_datos
    (18) PARAMETROS -> . VARIABLE
    (4) tipos_datos -> . booleano_tipo
    (5) tipos_datos -> . CADENA
    (6) tipos_datos -> . NUMERO
    (7) tipos_datos -> . NULL
    (11) booleano_tipo -> . TRUE
    (12) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 20
    CADENA          shift and go to state 15
    NUMERO          shift and go to state 16
    NULL            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    MASPARAMETROS                  shift and go to state 21
    PARAMETROS                     shift and go to state 22
    tipos_datos                    shift and go to state 23
    booleano_tipo                  shift and go to state 14

state 13

    (3) asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos .

    $end            reduce using rule 3 (asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos .)


state 14

    (4) tipos_datos -> booleano_tipo .

    $end            reduce using rule 4 (tipos_datos -> booleano_tipo .)
    COMA            reduce using rule 4 (tipos_datos -> booleano_tipo .)
    RPAREN          reduce using rule 4 (tipos_datos -> booleano_tipo .)


state 15

    (5) tipos_datos -> CADENA .

    $end            reduce using rule 5 (tipos_datos -> CADENA .)
    COMA            reduce using rule 5 (tipos_datos -> CADENA .)
    RPAREN          reduce using rule 5 (tipos_datos -> CADENA .)


state 16

    (6) tipos_datos -> NUMERO .

    $end            reduce using rule 6 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 6 (tipos_datos -> NUMERO .)
    RPAREN          reduce using rule 6 (tipos_datos -> NUMERO .)


state 17

    (7) tipos_datos -> NULL .

    $end            reduce using rule 7 (tipos_datos -> NULL .)
    COMA            reduce using rule 7 (tipos_datos -> NULL .)
    RPAREN          reduce using rule 7 (tipos_datos -> NULL .)


state 18

    (11) booleano_tipo -> TRUE .

    $end            reduce using rule 11 (booleano_tipo -> TRUE .)
    COMA            reduce using rule 11 (booleano_tipo -> TRUE .)
    RPAREN          reduce using rule 11 (booleano_tipo -> TRUE .)


state 19

    (12) booleano_tipo -> FALSE .

    $end            reduce using rule 12 (booleano_tipo -> FALSE .)
    COMA            reduce using rule 12 (booleano_tipo -> FALSE .)
    RPAREN          reduce using rule 12 (booleano_tipo -> FALSE .)


state 20

    (18) PARAMETROS -> VARIABLE .

    COMA            reduce using rule 18 (PARAMETROS -> VARIABLE .)
    RPAREN          reduce using rule 18 (PARAMETROS -> VARIABLE .)


state 21

    (14) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE

    RPAREN          shift and go to state 24


state 22

    (15) MASPARAMETROS -> PARAMETROS .
    (16) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    RPAREN          reduce using rule 15 (MASPARAMETROS -> PARAMETROS .)
    COMA            shift and go to state 25


state 23

    (17) PARAMETROS -> tipos_datos .

    COMA            reduce using rule 17 (PARAMETROS -> tipos_datos .)
    RPAREN          reduce using rule 17 (PARAMETROS -> tipos_datos .)


state 24

    (14) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE

    ILLAVE          shift and go to state 26


state 25

    (16) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (15) MASPARAMETROS -> . PARAMETROS
    (16) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (17) PARAMETROS -> . tipos_datos
    (18) PARAMETROS -> . VARIABLE
    (4) tipos_datos -> . booleano_tipo
    (5) tipos_datos -> . CADENA
    (6) tipos_datos -> . NUMERO
    (7) tipos_datos -> . NULL
    (11) booleano_tipo -> . TRUE
    (12) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 20
    CADENA          shift and go to state 15
    NUMERO          shift and go to state 16
    NULL            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    PARAMETROS                     shift and go to state 22
    MASPARAMETROS                  shift and go to state 27
    tipos_datos                    shift and go to state 23
    booleano_tipo                  shift and go to state 14

state 26

    (14) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE

    DLLAVE          shift and go to state 28


state 27

    (16) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 16 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 28

    (14) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 14 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)

