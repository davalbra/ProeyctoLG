Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARGUMENTS
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    IF
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    MODULO
    NEGACION
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     OPERATOR_MAT -> MAS
Rule 3     OPERATOR_MAT -> MENOS
Rule 4     OPERATOR_MAT -> MULTIPLICAR
Rule 5     OPERATOR_MAT -> DIVIDIR
Rule 6     EXPRESSION -> asignar_variable
Rule 7     EXPRESSION -> ESTRUCTURA_FOR
Rule 8     EXPRESSION -> grupo_datos
Rule 9     EXPRESSION -> FUNCTIONS
Rule 10    EXPRESSION -> declarar_variable
Rule 11    EXPRESSION -> NUMERO
Rule 12    EXPRESSION -> FLOTANTE
Rule 13    EXPRESSION -> EXPRESSION_MAT
Rule 14    EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA
Rule 15    EXPRESSION -> metodos_estructuras
Rule 16    EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS
Rule 17    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO
Rule 18    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE
Rule 19    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
Rule 20    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
Rule 21    EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN
Rule 22    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO
Rule 23    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE
Rule 24    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO
Rule 25    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE
Rule 26    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
Rule 27    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
Rule 28    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE
Rule 29    EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
Rule 30    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE
Rule 31    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE
Rule 32    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE
Rule 33    EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION
Rule 34    COMPARACION -> VARIABLE
Rule 35    COMPARACION -> NUMERO
Rule 36    COMPARACION -> BOOLEANO
Rule 37    OPERATOR_COMP_MAT -> IGUALDADESTRICTA
Rule 38    OPERATOR_COMP_MAT -> MAYORIGUAL
Rule 39    OPERATOR_COMP_MAT -> MENORIGUAL
Rule 40    OPERATOR_COMP_MAT -> MENOR_QUE
Rule 41    OPERATOR_COMP_MAT -> MAYOR_QUE
Rule 42    OPERATOR_COMP_MAT -> AND
Rule 43    OPERATOR_COMP_MAT -> OR
Rule 44    OPERATOR_COMP_MAT -> NOESIGUAL
Rule 45    grupo_datos -> tipos_datos
Rule 46    grupo_datos -> tipos_datos COMA grupo_datos
Rule 47    asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA
Rule 48    asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA
Rule 49    asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA
Rule 50    asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras
Rule 51    asignar_variable -> declarar_variable ASIGNAR iniciar_array
Rule 52    declarar_variable -> tipo_variable VARIABLE PUNTOCOMA
Rule 53    declarar_variable -> tipo_variable VARIABLE
Rule 54    metodos_estructuras -> VARIABLE metodos_array
Rule 55    metodos_estructuras -> VARIABLE metodos_set
Rule 56    metodos_estructuras -> VARIABLE metodos_map
Rule 57    metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA
Rule 58    metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA
Rule 59    metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA
Rule 60    metodos_set -> METODO_SIZE_SET PUNTOCOMA
Rule 61    metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
Rule 62    metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA
Rule 63    iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA
Rule 64    tipos_datos -> booleano_tipo
Rule 65    tipos_datos -> NUMERO
Rule 66    tipos_datos -> CADENA
Rule 67    tipos_datos -> FLOTANTE
Rule 68    tipos_datos -> NULL
Rule 69    tipo_variable -> VAR
Rule 70    tipo_variable -> LET
Rule 71    tipo_variable -> CONST
Rule 72    iniciar_array -> ICORCHETE DCORCHETE
Rule 73    iniciar_array -> ICORCHETE repeticion_bool DCORCHETE
Rule 74    iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE
Rule 75    iniciar_array -> ICORCHETE repeticion_null DCORCHETE
Rule 76    iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE
Rule 77    iniciar_array -> ICORCHETE repeticion_numero DCORCHETE
Rule 78    repeticion_flotante -> FLOTANTE
Rule 79    repeticion_flotante -> repeticion_flotante COMA FLOTANTE
Rule 80    repeticion_null -> NULL
Rule 81    repeticion_null -> repeticion_null COMA NULL
Rule 82    repeticion_cadena -> CADENA
Rule 83    repeticion_cadena -> repeticion_cadena COMA CADENA
Rule 84    repeticion_numero -> NUMERO
Rule 85    repeticion_numero -> repeticion_numero COMA NUMERO
Rule 86    repeticion_bool -> booleano_tipo
Rule 87    repeticion_bool -> repeticion_bool COMA booleano_tipo
Rule 88    booleano_tipo -> TRUE
Rule 89    booleano_tipo -> FALSE
Rule 90    cadenas_caracteres -> CADENA
Rule 91    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 92    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
Rule 93    MASPARAMETROS -> PARAMETROS VAR
Rule 94    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 95    PARAMETROS -> tipos_datos
Rule 96    PARAMETROS -> VARIABLE
Rule 97    ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 42
ARGUMENTS            : 
ASIGNAR              : 47 48 49 50 51
AWAIT                : 
BOOLEANO             : 36
BREAK                : 
CADENA               : 66 82 83 90
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 46 61 79 81 83 85 87 94
COMENTARIO           : 
CONST                : 71
CONTINUE             : 
DCORCHETE            : 72 73 74 75 76 77
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 5
DIVISIONIGUAL        : 
DLLAVE               : 91 92 97
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 89
FINALLY              : 
FLOTANTE             : 12 27 28 28 31 32 67 78 79
FOR                  : 97
FUNCTION             : 91 92
ICORCHETE            : 72 73 74 75 76 77
IF                   : 
IGUALDADESTRICTA     : 37
ILLAVE               : 91 92 97
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 70
LPAREN               : 21 29 57 58 59 61 62 63 91 92 97
MAS                  : 2 97 97
MASIGUAL             : 
MAYORIGUAL           : 38
MAYOR_QUE            : 41
MENORIGUAL           : 39
MENOR_QUE            : 40
MENOS                : 3
MENOSIGUAL           : 
METODO_ADD_SET       : 59
METODO_HAS           : 62
METODO_POP_ARRAY     : 57
METODO_PUSH_ARRAY    : 58
METODO_SET           : 61
METODO_SIZE_SET      : 60
MODULO               : 
MULTIPLICAR          : 4
NEGACION             : 
NEW                  : 63
NOESIGUAL            : 44
NULL                 : 68 80 81
NUMERO               : 11 20 22 22 24 25 35 65 84 85
OR                   : 43
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOCOMA            : 47 48 49 52 57 58 59 60 61 62 63 97
RETURN               : 92
RPAREN               : 21 29 57 58 59 61 62 63 91 92 97
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 88
TRY                  : 
TYPEOF               : 
VAR                  : 69 93
VARIABLE             : 23 23 24 25 30 30 31 32 34 48 48 49 52 53 54 55 56 63 91 92 96 97
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMPARACION          : 33 33
ESTRUCTURA_FOR       : 7
EXPRESSION           : 1
EXPRESSION_CONDICION_BOOLEANA : 14 97
EXPRESSION_MAT       : 13
EXPRESSION_MAT_FLOTANTE : 18 26 26 27 29
EXPRESSION_MAT_NUMERO : 17 19 19 20 21
EXPRESSION_MAT_OPTIONS : 16
FUNCTIONS            : 9
MASPARAMETROS        : 58 59 91 92 92 94
OPERATOR_COMP_MAT    : 33
OPERATOR_MAT         : 19 20 22 23 24 25 26 27 28 30 31 32
PARAMETROS           : 93 94
STATEMENT            : 0
asignar_variable     : 6 97
booleano_tipo        : 64 86 87
cadenas_caracteres   : 
declarar_variable    : 10 47 50 51
grupo_datos          : 8 46
iniciar_array        : 51
iniciar_estructuras  : 50
metodos_array        : 54
metodos_estructuras  : 15
metodos_map          : 56
metodos_set          : 55
repeticion_bool      : 73 87
repeticion_cadena    : 76 83
repeticion_flotante  : 74 79
repeticion_null      : 75 81
repeticion_numero    : 77 85
tipo_variable        : 52 53
tipos_datos          : 45 46 47 49 61 61 62 95

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (6) EXPRESSION -> . asignar_variable
    (7) EXPRESSION -> . ESTRUCTURA_FOR
    (8) EXPRESSION -> . grupo_datos
    (9) EXPRESSION -> . FUNCTIONS
    (10) EXPRESSION -> . declarar_variable
    (11) EXPRESSION -> . NUMERO
    (12) EXPRESSION -> . FLOTANTE
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONDICION_BOOLEANA
    (15) EXPRESSION -> . metodos_estructuras
    (47) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (48) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (49) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (50) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (51) asignar_variable -> . declarar_variable ASIGNAR iniciar_array
    (97) ESTRUCTURA_FOR -> . FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (45) grupo_datos -> . tipos_datos
    (46) grupo_datos -> . tipos_datos COMA grupo_datos
    (91) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (92) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (52) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (53) declarar_variable -> . tipo_variable VARIABLE
    (16) EXPRESSION_MAT -> . EXPRESSION_MAT_OPTIONS
    (33) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (54) metodos_estructuras -> . VARIABLE metodos_array
    (55) metodos_estructuras -> . VARIABLE metodos_set
    (56) metodos_estructuras -> . VARIABLE metodos_map
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (69) tipo_variable -> . VAR
    (70) tipo_variable -> . LET
    (71) tipo_variable -> . CONST
    (17) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_FLOTANTE
    (34) COMPARACION -> . VARIABLE
    (35) COMPARACION -> . NUMERO
    (36) COMPARACION -> . BOOLEANO
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (22) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (29) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 8
    FLOTANTE        shift and go to state 9
    VARIABLE        shift and go to state 14
    FOR             shift and go to state 15
    FUNCTION        shift and go to state 17
    CADENA          shift and go to state 22
    NULL            shift and go to state 23
    VAR             shift and go to state 24
    LET             shift and go to state 25
    CONST           shift and go to state 26
    BOOLEANO        shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    LPAREN          shift and go to state 16

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    asignar_variable               shift and go to state 3
    ESTRUCTURA_FOR                 shift and go to state 4
    grupo_datos                    shift and go to state 5
    FUNCTIONS                      shift and go to state 6
    declarar_variable              shift and go to state 7
    EXPRESSION_MAT                 shift and go to state 10
    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 11
    metodos_estructuras            shift and go to state 12
    tipos_datos                    shift and go to state 13
    tipo_variable                  shift and go to state 18
    EXPRESSION_MAT_OPTIONS         shift and go to state 19
    COMPARACION                    shift and go to state 20
    booleano_tipo                  shift and go to state 21
    EXPRESSION_MAT_NUMERO          shift and go to state 27
    EXPRESSION_MAT_FLOTANTE        shift and go to state 28

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (6) EXPRESSION -> asignar_variable .

    $end            reduce using rule 6 (EXPRESSION -> asignar_variable .)


state 4

    (7) EXPRESSION -> ESTRUCTURA_FOR .

    $end            reduce using rule 7 (EXPRESSION -> ESTRUCTURA_FOR .)


state 5

    (8) EXPRESSION -> grupo_datos .

    $end            reduce using rule 8 (EXPRESSION -> grupo_datos .)


state 6

    (9) EXPRESSION -> FUNCTIONS .

    $end            reduce using rule 9 (EXPRESSION -> FUNCTIONS .)


state 7

    (10) EXPRESSION -> declarar_variable .
    (47) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (50) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras
    (51) asignar_variable -> declarar_variable . ASIGNAR iniciar_array

    $end            reduce using rule 10 (EXPRESSION -> declarar_variable .)
    ASIGNAR         shift and go to state 32


state 8

    (11) EXPRESSION -> NUMERO .
    (65) tipos_datos -> NUMERO .
    (35) COMPARACION -> NUMERO .
    (22) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> NUMERO .)
    $end            reduce using rule 11 (EXPRESSION -> NUMERO .)
    COMA            reduce using rule 65 (tipos_datos -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 35 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 35 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 35 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 35 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 35 (COMPARACION -> NUMERO .)
    AND             reduce using rule 35 (COMPARACION -> NUMERO .)
    OR              reduce using rule 35 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 35 (COMPARACION -> NUMERO .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! $end            [ reduce using rule 65 (tipos_datos -> NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 33

state 9

    (12) EXPRESSION -> FLOTANTE .
    (67) tipos_datos -> FLOTANTE .
    (28) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 12 (EXPRESSION -> FLOTANTE .)
    $end            reduce using rule 12 (EXPRESSION -> FLOTANTE .)
    COMA            reduce using rule 67 (tipos_datos -> FLOTANTE .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! $end            [ reduce using rule 67 (tipos_datos -> FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 38

state 10

    (13) EXPRESSION -> EXPRESSION_MAT .

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)


state 11

    (14) EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .)


state 12

    (15) EXPRESSION -> metodos_estructuras .

    $end            reduce using rule 15 (EXPRESSION -> metodos_estructuras .)


state 13

    (45) grupo_datos -> tipos_datos .
    (46) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 45 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 39


state 14

    (48) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (49) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA
    (54) metodos_estructuras -> VARIABLE . metodos_array
    (55) metodos_estructuras -> VARIABLE . metodos_set
    (56) metodos_estructuras -> VARIABLE . metodos_map
    (34) COMPARACION -> VARIABLE .
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (57) metodos_array -> . METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA
    (58) metodos_array -> . METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA
    (59) metodos_set -> . METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA
    (60) metodos_set -> . METODO_SIZE_SET PUNTOCOMA
    (61) metodos_map -> . METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
    (62) metodos_map -> . METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    ASIGNAR         shift and go to state 40
    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 34 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 34 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> VARIABLE .)
    METODO_POP_ARRAY shift and go to state 45
    METODO_PUSH_ARRAY shift and go to state 46
    METODO_ADD_SET  shift and go to state 47
    METODO_SIZE_SET shift and go to state 48
    METODO_SET      shift and go to state 49
    METODO_HAS      shift and go to state 50
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    metodos_array                  shift and go to state 41
    metodos_set                    shift and go to state 42
    metodos_map                    shift and go to state 43
    OPERATOR_MAT                   shift and go to state 44

state 15

    (97) ESTRUCTURA_FOR -> FOR . LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    LPAREN          shift and go to state 51


state 16

    (21) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (22) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (29) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 16
    NUMERO          shift and go to state 54
    VARIABLE        shift and go to state 55
    FLOTANTE        shift and go to state 56

    EXPRESSION_MAT_NUMERO          shift and go to state 52
    EXPRESSION_MAT_FLOTANTE        shift and go to state 53

state 17

    (91) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (92) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    VARIABLE        shift and go to state 57


state 18

    (52) declarar_variable -> tipo_variable . VARIABLE PUNTOCOMA
    (53) declarar_variable -> tipo_variable . VARIABLE

    VARIABLE        shift and go to state 58


state 19

    (16) EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .

    $end            reduce using rule 16 (EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .)


state 20

    (33) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION . OPERATOR_COMP_MAT COMPARACION
    (37) OPERATOR_COMP_MAT -> . IGUALDADESTRICTA
    (38) OPERATOR_COMP_MAT -> . MAYORIGUAL
    (39) OPERATOR_COMP_MAT -> . MENORIGUAL
    (40) OPERATOR_COMP_MAT -> . MENOR_QUE
    (41) OPERATOR_COMP_MAT -> . MAYOR_QUE
    (42) OPERATOR_COMP_MAT -> . AND
    (43) OPERATOR_COMP_MAT -> . OR
    (44) OPERATOR_COMP_MAT -> . NOESIGUAL

    IGUALDADESTRICTA shift and go to state 60
    MAYORIGUAL      shift and go to state 61
    MENORIGUAL      shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    NOESIGUAL       shift and go to state 67

    OPERATOR_COMP_MAT              shift and go to state 59

state 21

    (64) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 64 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 64 (tipos_datos -> booleano_tipo .)
    PUNTOCOMA       reduce using rule 64 (tipos_datos -> booleano_tipo .)
    VAR             reduce using rule 64 (tipos_datos -> booleano_tipo .)
    RPAREN          reduce using rule 64 (tipos_datos -> booleano_tipo .)


state 22

    (66) tipos_datos -> CADENA .

    COMA            reduce using rule 66 (tipos_datos -> CADENA .)
    $end            reduce using rule 66 (tipos_datos -> CADENA .)
    PUNTOCOMA       reduce using rule 66 (tipos_datos -> CADENA .)
    VAR             reduce using rule 66 (tipos_datos -> CADENA .)
    RPAREN          reduce using rule 66 (tipos_datos -> CADENA .)


state 23

    (68) tipos_datos -> NULL .

    COMA            reduce using rule 68 (tipos_datos -> NULL .)
    $end            reduce using rule 68 (tipos_datos -> NULL .)
    PUNTOCOMA       reduce using rule 68 (tipos_datos -> NULL .)
    VAR             reduce using rule 68 (tipos_datos -> NULL .)
    RPAREN          reduce using rule 68 (tipos_datos -> NULL .)


state 24

    (69) tipo_variable -> VAR .

    VARIABLE        reduce using rule 69 (tipo_variable -> VAR .)


state 25

    (70) tipo_variable -> LET .

    VARIABLE        reduce using rule 70 (tipo_variable -> LET .)


state 26

    (71) tipo_variable -> CONST .

    VARIABLE        reduce using rule 71 (tipo_variable -> CONST .)


state 27

    (17) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 17 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 68

state 28

    (18) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 18 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 69

state 29

    (36) COMPARACION -> BOOLEANO .

    IGUALDADESTRICTA reduce using rule 36 (COMPARACION -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 36 (COMPARACION -> BOOLEANO .)
    MENORIGUAL      reduce using rule 36 (COMPARACION -> BOOLEANO .)
    MENOR_QUE       reduce using rule 36 (COMPARACION -> BOOLEANO .)
    MAYOR_QUE       reduce using rule 36 (COMPARACION -> BOOLEANO .)
    AND             reduce using rule 36 (COMPARACION -> BOOLEANO .)
    OR              reduce using rule 36 (COMPARACION -> BOOLEANO .)
    NOESIGUAL       reduce using rule 36 (COMPARACION -> BOOLEANO .)
    $end            reduce using rule 36 (COMPARACION -> BOOLEANO .)
    PUNTOCOMA       reduce using rule 36 (COMPARACION -> BOOLEANO .)


state 30

    (88) booleano_tipo -> TRUE .

    COMA            reduce using rule 88 (booleano_tipo -> TRUE .)
    $end            reduce using rule 88 (booleano_tipo -> TRUE .)
    PUNTOCOMA       reduce using rule 88 (booleano_tipo -> TRUE .)
    DCORCHETE       reduce using rule 88 (booleano_tipo -> TRUE .)
    VAR             reduce using rule 88 (booleano_tipo -> TRUE .)
    RPAREN          reduce using rule 88 (booleano_tipo -> TRUE .)


state 31

    (89) booleano_tipo -> FALSE .

    COMA            reduce using rule 89 (booleano_tipo -> FALSE .)
    $end            reduce using rule 89 (booleano_tipo -> FALSE .)
    PUNTOCOMA       reduce using rule 89 (booleano_tipo -> FALSE .)
    DCORCHETE       reduce using rule 89 (booleano_tipo -> FALSE .)
    VAR             reduce using rule 89 (booleano_tipo -> FALSE .)
    RPAREN          reduce using rule 89 (booleano_tipo -> FALSE .)


state 32

    (47) asignar_variable -> declarar_variable ASIGNAR . tipos_datos PUNTOCOMA
    (50) asignar_variable -> declarar_variable ASIGNAR . iniciar_estructuras
    (51) asignar_variable -> declarar_variable ASIGNAR . iniciar_array
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (63) iniciar_estructuras -> . NEW VARIABLE LPAREN RPAREN PUNTOCOMA
    (72) iniciar_array -> . ICORCHETE DCORCHETE
    (73) iniciar_array -> . ICORCHETE repeticion_bool DCORCHETE
    (74) iniciar_array -> . ICORCHETE repeticion_flotante DCORCHETE
    (75) iniciar_array -> . ICORCHETE repeticion_null DCORCHETE
    (76) iniciar_array -> . ICORCHETE repeticion_cadena DCORCHETE
    (77) iniciar_array -> . ICORCHETE repeticion_numero DCORCHETE
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    NEW             shift and go to state 75
    ICORCHETE       shift and go to state 76
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 70
    iniciar_estructuras            shift and go to state 71
    iniciar_array                  shift and go to state 72
    booleano_tipo                  shift and go to state 21

state 33

    (22) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . NUMERO
    (25) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . VARIABLE

    NUMERO          shift and go to state 77
    VARIABLE        shift and go to state 78


state 34

    (2) OPERATOR_MAT -> MAS .

    NUMERO          reduce using rule 2 (OPERATOR_MAT -> MAS .)
    VARIABLE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    FLOTANTE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    LPAREN          reduce using rule 2 (OPERATOR_MAT -> MAS .)


state 35

    (3) OPERATOR_MAT -> MENOS .

    NUMERO          reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    VARIABLE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    FLOTANTE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    LPAREN          reduce using rule 3 (OPERATOR_MAT -> MENOS .)


state 36

    (4) OPERATOR_MAT -> MULTIPLICAR .

    NUMERO          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    VARIABLE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    LPAREN          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)


state 37

    (5) OPERATOR_MAT -> DIVIDIR .

    NUMERO          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    VARIABLE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    FLOTANTE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    LPAREN          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)


state 38

    (28) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . VARIABLE

    FLOTANTE        shift and go to state 79
    VARIABLE        shift and go to state 80


state 39

    (46) grupo_datos -> tipos_datos COMA . grupo_datos
    (45) grupo_datos -> . tipos_datos
    (46) grupo_datos -> . tipos_datos COMA grupo_datos
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 13
    grupo_datos                    shift and go to state 81
    booleano_tipo                  shift and go to state 21

state 40

    (48) asignar_variable -> VARIABLE ASIGNAR . VARIABLE PUNTOCOMA
    (49) asignar_variable -> VARIABLE ASIGNAR . tipos_datos PUNTOCOMA
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 82
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 83
    booleano_tipo                  shift and go to state 21

state 41

    (54) metodos_estructuras -> VARIABLE metodos_array .

    $end            reduce using rule 54 (metodos_estructuras -> VARIABLE metodos_array .)


state 42

    (55) metodos_estructuras -> VARIABLE metodos_set .

    $end            reduce using rule 55 (metodos_estructuras -> VARIABLE metodos_set .)


state 43

    (56) metodos_estructuras -> VARIABLE metodos_map .

    $end            reduce using rule 56 (metodos_estructuras -> VARIABLE metodos_map .)


state 44

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 84
    NUMERO          shift and go to state 85
    FLOTANTE        shift and go to state 86


state 45

    (57) metodos_array -> METODO_POP_ARRAY . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 87


state 46

    (58) metodos_array -> METODO_PUSH_ARRAY . LPAREN MASPARAMETROS RPAREN PUNTOCOMA

    LPAREN          shift and go to state 88


state 47

    (59) metodos_set -> METODO_ADD_SET . LPAREN MASPARAMETROS RPAREN PUNTOCOMA

    LPAREN          shift and go to state 89


state 48

    (60) metodos_set -> METODO_SIZE_SET . PUNTOCOMA

    PUNTOCOMA       shift and go to state 90


state 49

    (61) metodos_map -> METODO_SET . LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA

    LPAREN          shift and go to state 91


state 50

    (62) metodos_map -> METODO_HAS . LPAREN tipos_datos RPAREN PUNTOCOMA

    LPAREN          shift and go to state 92


state 51

    (97) ESTRUCTURA_FOR -> FOR LPAREN . asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (47) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (48) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (49) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (50) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (51) asignar_variable -> . declarar_variable ASIGNAR iniciar_array
    (52) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (53) declarar_variable -> . tipo_variable VARIABLE
    (69) tipo_variable -> . VAR
    (70) tipo_variable -> . LET
    (71) tipo_variable -> . CONST

    VARIABLE        shift and go to state 94
    VAR             shift and go to state 24
    LET             shift and go to state 25
    CONST           shift and go to state 26

    asignar_variable               shift and go to state 93
    declarar_variable              shift and go to state 95
    tipo_variable                  shift and go to state 18

state 52

    (21) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO . RPAREN
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 96
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 68

state 53

    (29) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE . RPAREN
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 97
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 69

state 54

    (22) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 33

state 55

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 44

state 56

    (28) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 38

state 57

    (91) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (92) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    LPAREN          shift and go to state 98


state 58

    (52) declarar_variable -> tipo_variable VARIABLE . PUNTOCOMA
    (53) declarar_variable -> tipo_variable VARIABLE .

    PUNTOCOMA       shift and go to state 99
    ASIGNAR         reduce using rule 53 (declarar_variable -> tipo_variable VARIABLE .)
    $end            reduce using rule 53 (declarar_variable -> tipo_variable VARIABLE .)


state 59

    (33) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT . COMPARACION
    (34) COMPARACION -> . VARIABLE
    (35) COMPARACION -> . NUMERO
    (36) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 101
    NUMERO          shift and go to state 102
    BOOLEANO        shift and go to state 29

    COMPARACION                    shift and go to state 100

state 60

    (37) OPERATOR_COMP_MAT -> IGUALDADESTRICTA .

    VARIABLE        reduce using rule 37 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    NUMERO          reduce using rule 37 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    BOOLEANO        reduce using rule 37 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)


state 61

    (38) OPERATOR_COMP_MAT -> MAYORIGUAL .

    VARIABLE        reduce using rule 38 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    NUMERO          reduce using rule 38 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    BOOLEANO        reduce using rule 38 (OPERATOR_COMP_MAT -> MAYORIGUAL .)


state 62

    (39) OPERATOR_COMP_MAT -> MENORIGUAL .

    VARIABLE        reduce using rule 39 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    NUMERO          reduce using rule 39 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    BOOLEANO        reduce using rule 39 (OPERATOR_COMP_MAT -> MENORIGUAL .)


state 63

    (40) OPERATOR_COMP_MAT -> MENOR_QUE .

    VARIABLE        reduce using rule 40 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    NUMERO          reduce using rule 40 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    BOOLEANO        reduce using rule 40 (OPERATOR_COMP_MAT -> MENOR_QUE .)


state 64

    (41) OPERATOR_COMP_MAT -> MAYOR_QUE .

    VARIABLE        reduce using rule 41 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    NUMERO          reduce using rule 41 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    BOOLEANO        reduce using rule 41 (OPERATOR_COMP_MAT -> MAYOR_QUE .)


state 65

    (42) OPERATOR_COMP_MAT -> AND .

    VARIABLE        reduce using rule 42 (OPERATOR_COMP_MAT -> AND .)
    NUMERO          reduce using rule 42 (OPERATOR_COMP_MAT -> AND .)
    BOOLEANO        reduce using rule 42 (OPERATOR_COMP_MAT -> AND .)


state 66

    (43) OPERATOR_COMP_MAT -> OR .

    VARIABLE        reduce using rule 43 (OPERATOR_COMP_MAT -> OR .)
    NUMERO          reduce using rule 43 (OPERATOR_COMP_MAT -> OR .)
    BOOLEANO        reduce using rule 43 (OPERATOR_COMP_MAT -> OR .)


state 67

    (44) OPERATOR_COMP_MAT -> NOESIGUAL .

    VARIABLE        reduce using rule 44 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    NUMERO          reduce using rule 44 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    BOOLEANO        reduce using rule 44 (OPERATOR_COMP_MAT -> NOESIGUAL .)


state 68

    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (22) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 104
    LPAREN          shift and go to state 105
    VARIABLE        shift and go to state 106

    EXPRESSION_MAT_NUMERO          shift and go to state 103

state 69

    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (29) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 108
    LPAREN          shift and go to state 109
    VARIABLE        shift and go to state 110

    EXPRESSION_MAT_FLOTANTE        shift and go to state 107

state 70

    (47) asignar_variable -> declarar_variable ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 111


state 71

    (50) asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .

    $end            reduce using rule 50 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    VARIABLE        reduce using rule 50 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    NUMERO          reduce using rule 50 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    BOOLEANO        reduce using rule 50 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)


state 72

    (51) asignar_variable -> declarar_variable ASIGNAR iniciar_array .

    $end            reduce using rule 51 (asignar_variable -> declarar_variable ASIGNAR iniciar_array .)
    VARIABLE        reduce using rule 51 (asignar_variable -> declarar_variable ASIGNAR iniciar_array .)
    NUMERO          reduce using rule 51 (asignar_variable -> declarar_variable ASIGNAR iniciar_array .)
    BOOLEANO        reduce using rule 51 (asignar_variable -> declarar_variable ASIGNAR iniciar_array .)


state 73

    (65) tipos_datos -> NUMERO .

    PUNTOCOMA       reduce using rule 65 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 65 (tipos_datos -> NUMERO .)
    $end            reduce using rule 65 (tipos_datos -> NUMERO .)
    VAR             reduce using rule 65 (tipos_datos -> NUMERO .)
    RPAREN          reduce using rule 65 (tipos_datos -> NUMERO .)


state 74

    (67) tipos_datos -> FLOTANTE .

    PUNTOCOMA       reduce using rule 67 (tipos_datos -> FLOTANTE .)
    COMA            reduce using rule 67 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 67 (tipos_datos -> FLOTANTE .)
    VAR             reduce using rule 67 (tipos_datos -> FLOTANTE .)
    RPAREN          reduce using rule 67 (tipos_datos -> FLOTANTE .)


state 75

    (63) iniciar_estructuras -> NEW . VARIABLE LPAREN RPAREN PUNTOCOMA

    VARIABLE        shift and go to state 112


state 76

    (72) iniciar_array -> ICORCHETE . DCORCHETE
    (73) iniciar_array -> ICORCHETE . repeticion_bool DCORCHETE
    (74) iniciar_array -> ICORCHETE . repeticion_flotante DCORCHETE
    (75) iniciar_array -> ICORCHETE . repeticion_null DCORCHETE
    (76) iniciar_array -> ICORCHETE . repeticion_cadena DCORCHETE
    (77) iniciar_array -> ICORCHETE . repeticion_numero DCORCHETE
    (86) repeticion_bool -> . booleano_tipo
    (87) repeticion_bool -> . repeticion_bool COMA booleano_tipo
    (78) repeticion_flotante -> . FLOTANTE
    (79) repeticion_flotante -> . repeticion_flotante COMA FLOTANTE
    (80) repeticion_null -> . NULL
    (81) repeticion_null -> . repeticion_null COMA NULL
    (82) repeticion_cadena -> . CADENA
    (83) repeticion_cadena -> . repeticion_cadena COMA CADENA
    (84) repeticion_numero -> . NUMERO
    (85) repeticion_numero -> . repeticion_numero COMA NUMERO
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    DCORCHETE       shift and go to state 113
    FLOTANTE        shift and go to state 120
    NULL            shift and go to state 121
    CADENA          shift and go to state 122
    NUMERO          shift and go to state 123
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    repeticion_bool                shift and go to state 114
    repeticion_flotante            shift and go to state 115
    repeticion_null                shift and go to state 116
    repeticion_cadena              shift and go to state 117
    repeticion_numero              shift and go to state 118
    booleano_tipo                  shift and go to state 119

state 77

    (22) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .

    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)


state 78

    (25) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 25 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)


state 79

    (28) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)


state 80

    (32) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 32 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)


state 81

    (46) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 46 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 82

    (48) asignar_variable -> VARIABLE ASIGNAR VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 124


state 83

    (49) asignar_variable -> VARIABLE ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 125


state 84

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICAR resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)

  ! MAS             [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MENOS           [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MULTIPLICAR     [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! $end            [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! RPAREN          [ reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]


state 85

    (24) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .

    MAS             reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    $end            reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 24 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)


state 86

    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)


state 87

    (57) metodos_array -> METODO_POP_ARRAY LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 126


state 88

    (58) metodos_array -> METODO_PUSH_ARRAY LPAREN . MASPARAMETROS RPAREN PUNTOCOMA
    (93) MASPARAMETROS -> . PARAMETROS VAR
    (94) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (95) PARAMETROS -> . tipos_datos
    (96) PARAMETROS -> . VARIABLE
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 130
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    MASPARAMETROS                  shift and go to state 127
    PARAMETROS                     shift and go to state 128
    tipos_datos                    shift and go to state 129
    booleano_tipo                  shift and go to state 21

state 89

    (59) metodos_set -> METODO_ADD_SET LPAREN . MASPARAMETROS RPAREN PUNTOCOMA
    (93) MASPARAMETROS -> . PARAMETROS VAR
    (94) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (95) PARAMETROS -> . tipos_datos
    (96) PARAMETROS -> . VARIABLE
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 130
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    MASPARAMETROS                  shift and go to state 131
    PARAMETROS                     shift and go to state 128
    tipos_datos                    shift and go to state 129
    booleano_tipo                  shift and go to state 21

state 90

    (60) metodos_set -> METODO_SIZE_SET PUNTOCOMA .

    $end            reduce using rule 60 (metodos_set -> METODO_SIZE_SET PUNTOCOMA .)


state 91

    (61) metodos_map -> METODO_SET LPAREN . tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 132
    booleano_tipo                  shift and go to state 21

state 92

    (62) metodos_map -> METODO_HAS LPAREN . tipos_datos RPAREN PUNTOCOMA
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 133
    booleano_tipo                  shift and go to state 21

state 93

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable . EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (33) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (34) COMPARACION -> . VARIABLE
    (35) COMPARACION -> . NUMERO
    (36) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 101
    NUMERO          shift and go to state 102
    BOOLEANO        shift and go to state 29

    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 134
    COMPARACION                    shift and go to state 20

state 94

    (48) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (49) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA

    ASIGNAR         shift and go to state 40


state 95

    (47) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (50) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras
    (51) asignar_variable -> declarar_variable . ASIGNAR iniciar_array

    ASIGNAR         shift and go to state 32


state 96

    (21) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .

    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)


state 97

    (29) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .

    MAS             reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MENOS           reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MULTIPLICAR     reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    DIVIDIR         reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    $end            reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)


state 98

    (91) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (93) MASPARAMETROS -> . PARAMETROS VAR
    (94) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (95) PARAMETROS -> . tipos_datos
    (96) PARAMETROS -> . VARIABLE
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 130
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    MASPARAMETROS                  shift and go to state 135
    PARAMETROS                     shift and go to state 128
    tipos_datos                    shift and go to state 129
    booleano_tipo                  shift and go to state 21

state 99

    (52) declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .

    ASIGNAR         reduce using rule 52 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)
    $end            reduce using rule 52 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)


state 100

    (33) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .

    $end            reduce using rule 33 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)
    PUNTOCOMA       reduce using rule 33 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)


state 101

    (34) COMPARACION -> VARIABLE .

    $end            reduce using rule 34 (COMPARACION -> VARIABLE .)
    PUNTOCOMA       reduce using rule 34 (COMPARACION -> VARIABLE .)
    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 34 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 34 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> VARIABLE .)


state 102

    (35) COMPARACION -> NUMERO .

    $end            reduce using rule 35 (COMPARACION -> NUMERO .)
    PUNTOCOMA       reduce using rule 35 (COMPARACION -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 35 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 35 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 35 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 35 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 35 (COMPARACION -> NUMERO .)
    AND             reduce using rule 35 (COMPARACION -> NUMERO .)
    OR              reduce using rule 35 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 35 (COMPARACION -> NUMERO .)


state 103

    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    RPAREN          reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! MAS             [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MENOS           [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 68

state 104

    (20) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .
    (22) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! MAS             [ reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MENOS           [ reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 20 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 33

state 105

    (21) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (22) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (25) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 105
    NUMERO          shift and go to state 54
    VARIABLE        shift and go to state 106

    EXPRESSION_MAT_NUMERO          shift and go to state 52

state 106

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 136

state 107

    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! MAS             [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MENOS           [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 69

state 108

    (27) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .
    (28) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

  ! MAS             [ reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MENOS           [ reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 38

state 109

    (29) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (29) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (32) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 56
    LPAREN          shift and go to state 109
    VARIABLE        shift and go to state 110

    EXPRESSION_MAT_FLOTANTE        shift and go to state 53

state 110

    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    MULTIPLICAR     shift and go to state 36
    DIVIDIR         shift and go to state 37

    OPERATOR_MAT                   shift and go to state 137

state 111

    (47) asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 47 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    VARIABLE        reduce using rule 47 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    NUMERO          reduce using rule 47 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    BOOLEANO        reduce using rule 47 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)


state 112

    (63) iniciar_estructuras -> NEW VARIABLE . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 138


state 113

    (72) iniciar_array -> ICORCHETE DCORCHETE .

    $end            reduce using rule 72 (iniciar_array -> ICORCHETE DCORCHETE .)
    VARIABLE        reduce using rule 72 (iniciar_array -> ICORCHETE DCORCHETE .)
    NUMERO          reduce using rule 72 (iniciar_array -> ICORCHETE DCORCHETE .)
    BOOLEANO        reduce using rule 72 (iniciar_array -> ICORCHETE DCORCHETE .)


state 114

    (73) iniciar_array -> ICORCHETE repeticion_bool . DCORCHETE
    (87) repeticion_bool -> repeticion_bool . COMA booleano_tipo

    DCORCHETE       shift and go to state 139
    COMA            shift and go to state 140


state 115

    (74) iniciar_array -> ICORCHETE repeticion_flotante . DCORCHETE
    (79) repeticion_flotante -> repeticion_flotante . COMA FLOTANTE

    DCORCHETE       shift and go to state 141
    COMA            shift and go to state 142


state 116

    (75) iniciar_array -> ICORCHETE repeticion_null . DCORCHETE
    (81) repeticion_null -> repeticion_null . COMA NULL

    DCORCHETE       shift and go to state 143
    COMA            shift and go to state 144


state 117

    (76) iniciar_array -> ICORCHETE repeticion_cadena . DCORCHETE
    (83) repeticion_cadena -> repeticion_cadena . COMA CADENA

    DCORCHETE       shift and go to state 145
    COMA            shift and go to state 146


state 118

    (77) iniciar_array -> ICORCHETE repeticion_numero . DCORCHETE
    (85) repeticion_numero -> repeticion_numero . COMA NUMERO

    DCORCHETE       shift and go to state 147
    COMA            shift and go to state 148


state 119

    (86) repeticion_bool -> booleano_tipo .

    DCORCHETE       reduce using rule 86 (repeticion_bool -> booleano_tipo .)
    COMA            reduce using rule 86 (repeticion_bool -> booleano_tipo .)


state 120

    (78) repeticion_flotante -> FLOTANTE .

    DCORCHETE       reduce using rule 78 (repeticion_flotante -> FLOTANTE .)
    COMA            reduce using rule 78 (repeticion_flotante -> FLOTANTE .)


state 121

    (80) repeticion_null -> NULL .

    DCORCHETE       reduce using rule 80 (repeticion_null -> NULL .)
    COMA            reduce using rule 80 (repeticion_null -> NULL .)


state 122

    (82) repeticion_cadena -> CADENA .

    DCORCHETE       reduce using rule 82 (repeticion_cadena -> CADENA .)
    COMA            reduce using rule 82 (repeticion_cadena -> CADENA .)


state 123

    (84) repeticion_numero -> NUMERO .

    DCORCHETE       reduce using rule 84 (repeticion_numero -> NUMERO .)
    COMA            reduce using rule 84 (repeticion_numero -> NUMERO .)


state 124

    (48) asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .

    $end            reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    VARIABLE        reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    NUMERO          reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    BOOLEANO        reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)


state 125

    (49) asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 49 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    VARIABLE        reduce using rule 49 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    NUMERO          reduce using rule 49 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    BOOLEANO        reduce using rule 49 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)


state 126

    (57) metodos_array -> METODO_POP_ARRAY LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 149


state 127

    (58) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 150


state 128

    (93) MASPARAMETROS -> PARAMETROS . VAR
    (94) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    VAR             shift and go to state 151
    COMA            shift and go to state 152


state 129

    (95) PARAMETROS -> tipos_datos .

    VAR             reduce using rule 95 (PARAMETROS -> tipos_datos .)
    COMA            reduce using rule 95 (PARAMETROS -> tipos_datos .)


state 130

    (96) PARAMETROS -> VARIABLE .

    VAR             reduce using rule 96 (PARAMETROS -> VARIABLE .)
    COMA            reduce using rule 96 (PARAMETROS -> VARIABLE .)


state 131

    (59) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 153


state 132

    (61) metodos_map -> METODO_SET LPAREN tipos_datos . COMA tipos_datos RPAREN PUNTOCOMA

    COMA            shift and go to state 154


state 133

    (62) metodos_map -> METODO_HAS LPAREN tipos_datos . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 155


state 134

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA . PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    PUNTOCOMA       shift and go to state 156


state 135

    (91) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE
    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    RPAREN          shift and go to state 157


state 136

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (24) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO

    VARIABLE        shift and go to state 158
    NUMERO          shift and go to state 85


state 137

    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (31) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 159
    FLOTANTE        shift and go to state 86


state 138

    (63) iniciar_estructuras -> NEW VARIABLE LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 160


state 139

    (73) iniciar_array -> ICORCHETE repeticion_bool DCORCHETE .

    $end            reduce using rule 73 (iniciar_array -> ICORCHETE repeticion_bool DCORCHETE .)
    VARIABLE        reduce using rule 73 (iniciar_array -> ICORCHETE repeticion_bool DCORCHETE .)
    NUMERO          reduce using rule 73 (iniciar_array -> ICORCHETE repeticion_bool DCORCHETE .)
    BOOLEANO        reduce using rule 73 (iniciar_array -> ICORCHETE repeticion_bool DCORCHETE .)


state 140

    (87) repeticion_bool -> repeticion_bool COMA . booleano_tipo
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    booleano_tipo                  shift and go to state 161

state 141

    (74) iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE .

    $end            reduce using rule 74 (iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE .)
    VARIABLE        reduce using rule 74 (iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE .)
    NUMERO          reduce using rule 74 (iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE .)
    BOOLEANO        reduce using rule 74 (iniciar_array -> ICORCHETE repeticion_flotante DCORCHETE .)


state 142

    (79) repeticion_flotante -> repeticion_flotante COMA . FLOTANTE

    FLOTANTE        shift and go to state 162


state 143

    (75) iniciar_array -> ICORCHETE repeticion_null DCORCHETE .

    $end            reduce using rule 75 (iniciar_array -> ICORCHETE repeticion_null DCORCHETE .)
    VARIABLE        reduce using rule 75 (iniciar_array -> ICORCHETE repeticion_null DCORCHETE .)
    NUMERO          reduce using rule 75 (iniciar_array -> ICORCHETE repeticion_null DCORCHETE .)
    BOOLEANO        reduce using rule 75 (iniciar_array -> ICORCHETE repeticion_null DCORCHETE .)


state 144

    (81) repeticion_null -> repeticion_null COMA . NULL

    NULL            shift and go to state 163


state 145

    (76) iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE .

    $end            reduce using rule 76 (iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE .)
    VARIABLE        reduce using rule 76 (iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE .)
    NUMERO          reduce using rule 76 (iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE .)
    BOOLEANO        reduce using rule 76 (iniciar_array -> ICORCHETE repeticion_cadena DCORCHETE .)


state 146

    (83) repeticion_cadena -> repeticion_cadena COMA . CADENA

    CADENA          shift and go to state 164


state 147

    (77) iniciar_array -> ICORCHETE repeticion_numero DCORCHETE .

    $end            reduce using rule 77 (iniciar_array -> ICORCHETE repeticion_numero DCORCHETE .)
    VARIABLE        reduce using rule 77 (iniciar_array -> ICORCHETE repeticion_numero DCORCHETE .)
    NUMERO          reduce using rule 77 (iniciar_array -> ICORCHETE repeticion_numero DCORCHETE .)
    BOOLEANO        reduce using rule 77 (iniciar_array -> ICORCHETE repeticion_numero DCORCHETE .)


state 148

    (85) repeticion_numero -> repeticion_numero COMA . NUMERO

    NUMERO          shift and go to state 165


state 149

    (57) metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 57 (metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA .)


state 150

    (58) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 151

    (93) MASPARAMETROS -> PARAMETROS VAR .

    RPAREN          reduce using rule 93 (MASPARAMETROS -> PARAMETROS VAR .)
    DLLAVE          reduce using rule 93 (MASPARAMETROS -> PARAMETROS VAR .)


state 152

    (94) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (93) MASPARAMETROS -> . PARAMETROS VAR
    (94) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (95) PARAMETROS -> . tipos_datos
    (96) PARAMETROS -> . VARIABLE
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 130
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    PARAMETROS                     shift and go to state 128
    MASPARAMETROS                  shift and go to state 167
    tipos_datos                    shift and go to state 129
    booleano_tipo                  shift and go to state 21

state 153

    (59) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 168


state 154

    (61) metodos_map -> METODO_SET LPAREN tipos_datos COMA . tipos_datos RPAREN PUNTOCOMA
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    tipos_datos                    shift and go to state 169
    booleano_tipo                  shift and go to state 21

state 155

    (62) metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 170


state 156

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA . VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    VARIABLE        shift and go to state 171


state 157

    (91) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE
    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE RETURN MASPARAMETROS DLLAVE

    ILLAVE          shift and go to state 172


state 158

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)


state 159

    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)


state 160

    (63) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 173


state 161

    (87) repeticion_bool -> repeticion_bool COMA booleano_tipo .

    DCORCHETE       reduce using rule 87 (repeticion_bool -> repeticion_bool COMA booleano_tipo .)
    COMA            reduce using rule 87 (repeticion_bool -> repeticion_bool COMA booleano_tipo .)


state 162

    (79) repeticion_flotante -> repeticion_flotante COMA FLOTANTE .

    DCORCHETE       reduce using rule 79 (repeticion_flotante -> repeticion_flotante COMA FLOTANTE .)
    COMA            reduce using rule 79 (repeticion_flotante -> repeticion_flotante COMA FLOTANTE .)


state 163

    (81) repeticion_null -> repeticion_null COMA NULL .

    DCORCHETE       reduce using rule 81 (repeticion_null -> repeticion_null COMA NULL .)
    COMA            reduce using rule 81 (repeticion_null -> repeticion_null COMA NULL .)


state 164

    (83) repeticion_cadena -> repeticion_cadena COMA CADENA .

    DCORCHETE       reduce using rule 83 (repeticion_cadena -> repeticion_cadena COMA CADENA .)
    COMA            reduce using rule 83 (repeticion_cadena -> repeticion_cadena COMA CADENA .)


state 165

    (85) repeticion_numero -> repeticion_numero COMA NUMERO .

    DCORCHETE       reduce using rule 85 (repeticion_numero -> repeticion_numero COMA NUMERO .)
    COMA            reduce using rule 85 (repeticion_numero -> repeticion_numero COMA NUMERO .)


state 166

    (58) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA .

    $end            reduce using rule 58 (metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA .)


state 167

    (94) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 94 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)
    DLLAVE          reduce using rule 94 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 168

    (59) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA .

    $end            reduce using rule 59 (metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA .)


state 169

    (61) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 174


state 170

    (62) metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA .

    $end            reduce using rule 62 (metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA .)


state 171

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE . MAS MAS RPAREN ILLAVE DLLAVE

    MAS             shift and go to state 175


state 172

    (91) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE
    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . RETURN MASPARAMETROS DLLAVE

    DLLAVE          shift and go to state 176
    RETURN          shift and go to state 177


state 173

    (63) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 63 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    VARIABLE        reduce using rule 63 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    NUMERO          reduce using rule 63 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    BOOLEANO        reduce using rule 63 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)


state 174

    (61) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 178


state 175

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS . MAS RPAREN ILLAVE DLLAVE

    MAS             shift and go to state 179


state 176

    (91) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 91 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)


state 177

    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN . MASPARAMETROS DLLAVE
    (93) MASPARAMETROS -> . PARAMETROS VAR
    (94) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (95) PARAMETROS -> . tipos_datos
    (96) PARAMETROS -> . VARIABLE
    (64) tipos_datos -> . booleano_tipo
    (65) tipos_datos -> . NUMERO
    (66) tipos_datos -> . CADENA
    (67) tipos_datos -> . FLOTANTE
    (68) tipos_datos -> . NULL
    (88) booleano_tipo -> . TRUE
    (89) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 130
    NUMERO          shift and go to state 73
    CADENA          shift and go to state 22
    FLOTANTE        shift and go to state 74
    NULL            shift and go to state 23
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31

    MASPARAMETROS                  shift and go to state 180
    PARAMETROS                     shift and go to state 128
    tipos_datos                    shift and go to state 129
    booleano_tipo                  shift and go to state 21

state 178

    (61) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA .

    $end            reduce using rule 61 (metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA .)


state 179

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS . RPAREN ILLAVE DLLAVE

    RPAREN          shift and go to state 181


state 180

    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS . DLLAVE

    DLLAVE          shift and go to state 182


state 181

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN . ILLAVE DLLAVE

    ILLAVE          shift and go to state 183


state 182

    (92) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .

    $end            reduce using rule 92 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .)


state 183

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE . DLLAVE

    DLLAVE          shift and go to state 184


state 184

    (97) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 97 (ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 103 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 103 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 103 resolved as shift
WARNING: shift/reduce conflict for MAS in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 104 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 104 resolved as shift
WARNING: shift/reduce conflict for MAS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 107 resolved as shift
WARNING: shift/reduce conflict for MAS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 108 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> NUMERO)
WARNING: rejected rule (tipos_datos -> NUMERO) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (EXPRESSION -> FLOTANTE)
WARNING: rejected rule (tipos_datos -> FLOTANTE) in state 9
WARNING: reduce/reduce conflict in state 84 resolved using rule (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE)
WARNING: rejected rule (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE) in state 84
