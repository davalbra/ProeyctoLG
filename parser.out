Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARGUMENTS
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FOR
    ICORCHETE
    IF
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    MODULO
    NEGACION
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    RETURN
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     OPERATOR_MAT -> MAS
Rule 3     OPERATOR_MAT -> MENOS
Rule 4     OPERATOR_MAT -> MULTIPLICAR
Rule 5     OPERATOR_MAT -> DIVIDIR
Rule 6     EXPRESSION -> asignar_variable
Rule 7     EXPRESSION -> grupo_datos
Rule 8     EXPRESSION -> FUNCTIONS
Rule 9     EXPRESSION -> declarar_variable
Rule 10    EXPRESSION -> NUMERO
Rule 11    EXPRESSION -> FLOTANTE
Rule 12    EXPRESSION -> EXPRESSION_MAT
Rule 13    EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA
Rule 14    EXPRESSION -> metodos_estructuras
Rule 15    EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS
Rule 16    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO
Rule 17    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE
Rule 18    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
Rule 19    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
Rule 20    EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN
Rule 21    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO
Rule 22    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE
Rule 23    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO
Rule 24    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE
Rule 25    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
Rule 26    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
Rule 27    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE
Rule 28    EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
Rule 29    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE
Rule 30    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE
Rule 31    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE
Rule 32    EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION
Rule 33    COMPARACION -> VARIABLE
Rule 34    COMPARACION -> NUMERO
Rule 35    COMPARACION -> BOOLEANO
Rule 36    OPERATOR_COMP_MAT -> IGUALDADESTRICTA
Rule 37    OPERATOR_COMP_MAT -> MAYORIGUAL
Rule 38    OPERATOR_COMP_MAT -> MENORIGUAL
Rule 39    OPERATOR_COMP_MAT -> MENOR_QUE
Rule 40    OPERATOR_COMP_MAT -> MAYOR_QUE
Rule 41    OPERATOR_COMP_MAT -> AND
Rule 42    OPERATOR_COMP_MAT -> OR
Rule 43    OPERATOR_COMP_MAT -> NOESIGUAL
Rule 44    grupo_datos -> tipos_datos
Rule 45    grupo_datos -> tipos_datos COMA grupo_datos
Rule 46    asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA
Rule 47    asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA
Rule 48    asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA
Rule 49    asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras
Rule 50    declarar_variable -> tipo_variable VARIABLE PUNTOCOMA
Rule 51    declarar_variable -> tipo_variable VARIABLE
Rule 52    metodos_estructuras -> VARIABLE metodos_array
Rule 53    metodos_estructuras -> VARIABLE metodos_set
Rule 54    metodos_estructuras -> VARIABLE metodos_map
Rule 55    metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA
Rule 56    metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA
Rule 57    metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA
Rule 58    metodos_set -> METODO_SIZE_SET PUNTOCOMA
Rule 59    metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
Rule 60    metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA
Rule 61    iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA
Rule 62    tipos_datos -> booleano_tipo
Rule 63    tipos_datos -> NUMERO
Rule 64    tipos_datos -> CADENA
Rule 65    tipos_datos -> FLOTANTE
Rule 66    tipos_datos -> NULL
Rule 67    tipo_variable -> VAR
Rule 68    tipo_variable -> LET
Rule 69    tipo_variable -> CONST
Rule 70    booleano_tipo -> TRUE
Rule 71    booleano_tipo -> FALSE
Rule 72    cadenas_caracteres -> CADENA
Rule 73    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 74    MASPARAMETROS -> PARAMETROS
Rule 75    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 76    PARAMETROS -> tipos_datos
Rule 77    PARAMETROS -> VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 41
ARGUMENTS            : 
ASIGNAR              : 46 47 48 49
AWAIT                : 
BOOLEANO             : 35
BREAK                : 
CADENA               : 64 72
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 45 59 75
COMENTARIO           : 
CONST                : 69
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 5
DIVISIONIGUAL        : 
DLLAVE               : 73
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 71
FINALLY              : 
FLOTANTE             : 11 26 27 27 30 31 65
FOR                  : 
FUNCTION             : 73
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 36
ILLAVE               : 73
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 68
LPAREN               : 20 28 55 56 57 59 60 61 73
MAS                  : 2
MASIGUAL             : 
MAYORIGUAL           : 37
MAYOR_QUE            : 40
MENORIGUAL           : 38
MENOR_QUE            : 39
MENOS                : 3
MENOSIGUAL           : 
METODO_ADD_SET       : 57
METODO_HAS           : 60
METODO_POP_ARRAY     : 55
METODO_PUSH_ARRAY    : 56
METODO_SET           : 59
METODO_SIZE_SET      : 58
MODULO               : 
MULTIPLICAR          : 4
NEGACION             : 
NEW                  : 61
NOESIGUAL            : 43
NULL                 : 66
NUMERO               : 10 19 21 21 23 24 34 63
OR                   : 42
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOCOMA            : 46 47 48 50 55 56 57 58 59 60 61
RETURN               : 
RPAREN               : 20 28 55 56 57 59 60 61 73
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 70
TRY                  : 
TYPEOF               : 
VAR                  : 67
VARIABLE             : 22 22 23 24 29 29 30 31 33 47 47 48 50 51 52 53 54 61 73 77
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMPARACION          : 32 32
EXPRESSION           : 1
EXPRESSION_CONDICION_BOOLEANA : 13
EXPRESSION_MAT       : 12
EXPRESSION_MAT_FLOTANTE : 17 25 25 26 28
EXPRESSION_MAT_NUMERO : 16 18 18 19 20
EXPRESSION_MAT_OPTIONS : 15
FUNCTIONS            : 8
MASPARAMETROS        : 56 57 73 75
OPERATOR_COMP_MAT    : 32
OPERATOR_MAT         : 18 19 21 22 23 24 25 26 27 29 30 31
PARAMETROS           : 74 75
STATEMENT            : 0
asignar_variable     : 6
booleano_tipo        : 62
cadenas_caracteres   : 
declarar_variable    : 9 46 49
grupo_datos          : 7 45
iniciar_estructuras  : 49
metodos_array        : 52
metodos_estructuras  : 14
metodos_map          : 54
metodos_set          : 53
tipo_variable        : 50 51
tipos_datos          : 44 45 46 48 59 59 60 76

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (6) EXPRESSION -> . asignar_variable
    (7) EXPRESSION -> . grupo_datos
    (8) EXPRESSION -> . FUNCTIONS
    (9) EXPRESSION -> . declarar_variable
    (10) EXPRESSION -> . NUMERO
    (11) EXPRESSION -> . FLOTANTE
    (12) EXPRESSION -> . EXPRESSION_MAT
    (13) EXPRESSION -> . EXPRESSION_CONDICION_BOOLEANA
    (14) EXPRESSION -> . metodos_estructuras
    (46) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (47) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (44) grupo_datos -> . tipos_datos
    (45) grupo_datos -> . tipos_datos COMA grupo_datos
    (73) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (50) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (51) declarar_variable -> . tipo_variable VARIABLE
    (15) EXPRESSION_MAT -> . EXPRESSION_MAT_OPTIONS
    (32) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (52) metodos_estructuras -> . VARIABLE metodos_array
    (53) metodos_estructuras -> . VARIABLE metodos_set
    (54) metodos_estructuras -> . VARIABLE metodos_map
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (67) tipo_variable -> . VAR
    (68) tipo_variable -> . LET
    (69) tipo_variable -> . CONST
    (16) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_NUMERO
    (17) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_FLOTANTE
    (33) COMPARACION -> . VARIABLE
    (34) COMPARACION -> . NUMERO
    (35) COMPARACION -> . BOOLEANO
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 7
    FLOTANTE        shift and go to state 8
    VARIABLE        shift and go to state 13
    FUNCTION        shift and go to state 14
    CADENA          shift and go to state 20
    NULL            shift and go to state 21
    VAR             shift and go to state 22
    LET             shift and go to state 23
    CONST           shift and go to state 24
    BOOLEANO        shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPAREN          shift and go to state 15

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    asignar_variable               shift and go to state 3
    grupo_datos                    shift and go to state 4
    FUNCTIONS                      shift and go to state 5
    declarar_variable              shift and go to state 6
    EXPRESSION_MAT                 shift and go to state 9
    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 10
    metodos_estructuras            shift and go to state 11
    tipos_datos                    shift and go to state 12
    tipo_variable                  shift and go to state 16
    EXPRESSION_MAT_OPTIONS         shift and go to state 17
    COMPARACION                    shift and go to state 18
    booleano_tipo                  shift and go to state 19
    EXPRESSION_MAT_NUMERO          shift and go to state 25
    EXPRESSION_MAT_FLOTANTE        shift and go to state 26

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (6) EXPRESSION -> asignar_variable .

    $end            reduce using rule 6 (EXPRESSION -> asignar_variable .)


state 4

    (7) EXPRESSION -> grupo_datos .

    $end            reduce using rule 7 (EXPRESSION -> grupo_datos .)


state 5

    (8) EXPRESSION -> FUNCTIONS .

    $end            reduce using rule 8 (EXPRESSION -> FUNCTIONS .)


state 6

    (9) EXPRESSION -> declarar_variable .
    (46) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras

    $end            reduce using rule 9 (EXPRESSION -> declarar_variable .)
    ASIGNAR         shift and go to state 30


state 7

    (10) EXPRESSION -> NUMERO .
    (63) tipos_datos -> NUMERO .
    (34) COMPARACION -> NUMERO .
    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> NUMERO .)
    $end            reduce using rule 10 (EXPRESSION -> NUMERO .)
    COMA            reduce using rule 63 (tipos_datos -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    AND             reduce using rule 34 (COMPARACION -> NUMERO .)
    OR              reduce using rule 34 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> NUMERO .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! $end            [ reduce using rule 63 (tipos_datos -> NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 31

state 8

    (11) EXPRESSION -> FLOTANTE .
    (65) tipos_datos -> FLOTANTE .
    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> FLOTANTE .)
    $end            reduce using rule 11 (EXPRESSION -> FLOTANTE .)
    COMA            reduce using rule 65 (tipos_datos -> FLOTANTE .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! $end            [ reduce using rule 65 (tipos_datos -> FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 36

state 9

    (12) EXPRESSION -> EXPRESSION_MAT .

    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION_MAT .)


state 10

    (13) EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .)


state 11

    (14) EXPRESSION -> metodos_estructuras .

    $end            reduce using rule 14 (EXPRESSION -> metodos_estructuras .)


state 12

    (44) grupo_datos -> tipos_datos .
    (45) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 44 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 37


state 13

    (47) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA
    (52) metodos_estructuras -> VARIABLE . metodos_array
    (53) metodos_estructuras -> VARIABLE . metodos_set
    (54) metodos_estructuras -> VARIABLE . metodos_map
    (33) COMPARACION -> VARIABLE .
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (55) metodos_array -> . METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA
    (56) metodos_array -> . METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA
    (57) metodos_set -> . METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA
    (58) metodos_set -> . METODO_SIZE_SET PUNTOCOMA
    (59) metodos_map -> . METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
    (60) metodos_map -> . METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    ASIGNAR         shift and go to state 38
    IGUALDADESTRICTA reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 33 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 33 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 33 (COMPARACION -> VARIABLE .)
    METODO_POP_ARRAY shift and go to state 43
    METODO_PUSH_ARRAY shift and go to state 44
    METODO_ADD_SET  shift and go to state 45
    METODO_SIZE_SET shift and go to state 46
    METODO_SET      shift and go to state 47
    METODO_HAS      shift and go to state 48
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    metodos_array                  shift and go to state 39
    metodos_set                    shift and go to state 40
    metodos_map                    shift and go to state 41
    OPERATOR_MAT                   shift and go to state 42

state 14

    (73) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    VARIABLE        shift and go to state 49


state 15

    (20) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 15
    NUMERO          shift and go to state 52
    VARIABLE        shift and go to state 53
    FLOTANTE        shift and go to state 54

    EXPRESSION_MAT_NUMERO          shift and go to state 50
    EXPRESSION_MAT_FLOTANTE        shift and go to state 51

state 16

    (50) declarar_variable -> tipo_variable . VARIABLE PUNTOCOMA
    (51) declarar_variable -> tipo_variable . VARIABLE

    VARIABLE        shift and go to state 55


state 17

    (15) EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .

    $end            reduce using rule 15 (EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .)


state 18

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION . OPERATOR_COMP_MAT COMPARACION
    (36) OPERATOR_COMP_MAT -> . IGUALDADESTRICTA
    (37) OPERATOR_COMP_MAT -> . MAYORIGUAL
    (38) OPERATOR_COMP_MAT -> . MENORIGUAL
    (39) OPERATOR_COMP_MAT -> . MENOR_QUE
    (40) OPERATOR_COMP_MAT -> . MAYOR_QUE
    (41) OPERATOR_COMP_MAT -> . AND
    (42) OPERATOR_COMP_MAT -> . OR
    (43) OPERATOR_COMP_MAT -> . NOESIGUAL

    IGUALDADESTRICTA shift and go to state 57
    MAYORIGUAL      shift and go to state 58
    MENORIGUAL      shift and go to state 59
    MENOR_QUE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    NOESIGUAL       shift and go to state 64

    OPERATOR_COMP_MAT              shift and go to state 56

state 19

    (62) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 62 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 62 (tipos_datos -> booleano_tipo .)
    PUNTOCOMA       reduce using rule 62 (tipos_datos -> booleano_tipo .)
    RPAREN          reduce using rule 62 (tipos_datos -> booleano_tipo .)


state 20

    (64) tipos_datos -> CADENA .

    COMA            reduce using rule 64 (tipos_datos -> CADENA .)
    $end            reduce using rule 64 (tipos_datos -> CADENA .)
    PUNTOCOMA       reduce using rule 64 (tipos_datos -> CADENA .)
    RPAREN          reduce using rule 64 (tipos_datos -> CADENA .)


state 21

    (66) tipos_datos -> NULL .

    COMA            reduce using rule 66 (tipos_datos -> NULL .)
    $end            reduce using rule 66 (tipos_datos -> NULL .)
    PUNTOCOMA       reduce using rule 66 (tipos_datos -> NULL .)
    RPAREN          reduce using rule 66 (tipos_datos -> NULL .)


state 22

    (67) tipo_variable -> VAR .

    VARIABLE        reduce using rule 67 (tipo_variable -> VAR .)


state 23

    (68) tipo_variable -> LET .

    VARIABLE        reduce using rule 68 (tipo_variable -> LET .)


state 24

    (69) tipo_variable -> CONST .

    VARIABLE        reduce using rule 69 (tipo_variable -> CONST .)


state 25

    (16) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 16 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 65

state 26

    (17) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 17 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 66

state 27

    (35) COMPARACION -> BOOLEANO .

    IGUALDADESTRICTA reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MENORIGUAL      reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MENOR_QUE       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MAYOR_QUE       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    AND             reduce using rule 35 (COMPARACION -> BOOLEANO .)
    OR              reduce using rule 35 (COMPARACION -> BOOLEANO .)
    NOESIGUAL       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    $end            reduce using rule 35 (COMPARACION -> BOOLEANO .)


state 28

    (70) booleano_tipo -> TRUE .

    COMA            reduce using rule 70 (booleano_tipo -> TRUE .)
    $end            reduce using rule 70 (booleano_tipo -> TRUE .)
    PUNTOCOMA       reduce using rule 70 (booleano_tipo -> TRUE .)
    RPAREN          reduce using rule 70 (booleano_tipo -> TRUE .)


state 29

    (71) booleano_tipo -> FALSE .

    COMA            reduce using rule 71 (booleano_tipo -> FALSE .)
    $end            reduce using rule 71 (booleano_tipo -> FALSE .)
    PUNTOCOMA       reduce using rule 71 (booleano_tipo -> FALSE .)
    RPAREN          reduce using rule 71 (booleano_tipo -> FALSE .)


state 30

    (46) asignar_variable -> declarar_variable ASIGNAR . tipos_datos PUNTOCOMA
    (49) asignar_variable -> declarar_variable ASIGNAR . iniciar_estructuras
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (61) iniciar_estructuras -> . NEW VARIABLE LPAREN RPAREN PUNTOCOMA
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    NEW             shift and go to state 71
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 67
    iniciar_estructuras            shift and go to state 68
    booleano_tipo                  shift and go to state 19

state 31

    (21) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . VARIABLE

    NUMERO          shift and go to state 72
    VARIABLE        shift and go to state 73


state 32

    (2) OPERATOR_MAT -> MAS .

    NUMERO          reduce using rule 2 (OPERATOR_MAT -> MAS .)
    VARIABLE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    FLOTANTE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    LPAREN          reduce using rule 2 (OPERATOR_MAT -> MAS .)


state 33

    (3) OPERATOR_MAT -> MENOS .

    NUMERO          reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    VARIABLE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    FLOTANTE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    LPAREN          reduce using rule 3 (OPERATOR_MAT -> MENOS .)


state 34

    (4) OPERATOR_MAT -> MULTIPLICAR .

    NUMERO          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    VARIABLE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    LPAREN          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)


state 35

    (5) OPERATOR_MAT -> DIVIDIR .

    NUMERO          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    VARIABLE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    FLOTANTE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    LPAREN          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)


state 36

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . VARIABLE

    FLOTANTE        shift and go to state 74
    VARIABLE        shift and go to state 75


state 37

    (45) grupo_datos -> tipos_datos COMA . grupo_datos
    (44) grupo_datos -> . tipos_datos
    (45) grupo_datos -> . tipos_datos COMA grupo_datos
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 12
    grupo_datos                    shift and go to state 76
    booleano_tipo                  shift and go to state 19

state 38

    (47) asignar_variable -> VARIABLE ASIGNAR . VARIABLE PUNTOCOMA
    (48) asignar_variable -> VARIABLE ASIGNAR . tipos_datos PUNTOCOMA
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 77
    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 78
    booleano_tipo                  shift and go to state 19

state 39

    (52) metodos_estructuras -> VARIABLE metodos_array .

    $end            reduce using rule 52 (metodos_estructuras -> VARIABLE metodos_array .)


state 40

    (53) metodos_estructuras -> VARIABLE metodos_set .

    $end            reduce using rule 53 (metodos_estructuras -> VARIABLE metodos_set .)


state 41

    (54) metodos_estructuras -> VARIABLE metodos_map .

    $end            reduce using rule 54 (metodos_estructuras -> VARIABLE metodos_map .)


state 42

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 79
    NUMERO          shift and go to state 80
    FLOTANTE        shift and go to state 81


state 43

    (55) metodos_array -> METODO_POP_ARRAY . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 82


state 44

    (56) metodos_array -> METODO_PUSH_ARRAY . LPAREN MASPARAMETROS RPAREN PUNTOCOMA

    LPAREN          shift and go to state 83


state 45

    (57) metodos_set -> METODO_ADD_SET . LPAREN MASPARAMETROS RPAREN PUNTOCOMA

    LPAREN          shift and go to state 84


state 46

    (58) metodos_set -> METODO_SIZE_SET . PUNTOCOMA

    PUNTOCOMA       shift and go to state 85


state 47

    (59) metodos_map -> METODO_SET . LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA

    LPAREN          shift and go to state 86


state 48

    (60) metodos_map -> METODO_HAS . LPAREN tipos_datos RPAREN PUNTOCOMA

    LPAREN          shift and go to state 87


state 49

    (73) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    LPAREN          shift and go to state 88


state 50

    (20) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO . RPAREN
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 89
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 65

state 51

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE . RPAREN
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 90
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 66

state 52

    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 31

state 53

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 42

state 54

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 36

state 55

    (50) declarar_variable -> tipo_variable VARIABLE . PUNTOCOMA
    (51) declarar_variable -> tipo_variable VARIABLE .

    PUNTOCOMA       shift and go to state 91
    ASIGNAR         reduce using rule 51 (declarar_variable -> tipo_variable VARIABLE .)
    $end            reduce using rule 51 (declarar_variable -> tipo_variable VARIABLE .)


state 56

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT . COMPARACION
    (33) COMPARACION -> . VARIABLE
    (34) COMPARACION -> . NUMERO
    (35) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 93
    NUMERO          shift and go to state 94
    BOOLEANO        shift and go to state 27

    COMPARACION                    shift and go to state 92

state 57

    (36) OPERATOR_COMP_MAT -> IGUALDADESTRICTA .

    VARIABLE        reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    NUMERO          reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    BOOLEANO        reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)


state 58

    (37) OPERATOR_COMP_MAT -> MAYORIGUAL .

    VARIABLE        reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    NUMERO          reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    BOOLEANO        reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)


state 59

    (38) OPERATOR_COMP_MAT -> MENORIGUAL .

    VARIABLE        reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    NUMERO          reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    BOOLEANO        reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)


state 60

    (39) OPERATOR_COMP_MAT -> MENOR_QUE .

    VARIABLE        reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    NUMERO          reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    BOOLEANO        reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)


state 61

    (40) OPERATOR_COMP_MAT -> MAYOR_QUE .

    VARIABLE        reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    NUMERO          reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    BOOLEANO        reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)


state 62

    (41) OPERATOR_COMP_MAT -> AND .

    VARIABLE        reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)
    NUMERO          reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)
    BOOLEANO        reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)


state 63

    (42) OPERATOR_COMP_MAT -> OR .

    VARIABLE        reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)
    NUMERO          reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)
    BOOLEANO        reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)


state 64

    (43) OPERATOR_COMP_MAT -> NOESIGUAL .

    VARIABLE        reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    NUMERO          reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    BOOLEANO        reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)


state 65

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 96
    LPAREN          shift and go to state 97
    VARIABLE        shift and go to state 98

    EXPRESSION_MAT_NUMERO          shift and go to state 95

state 66

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 100
    LPAREN          shift and go to state 101
    VARIABLE        shift and go to state 102

    EXPRESSION_MAT_FLOTANTE        shift and go to state 99

state 67

    (46) asignar_variable -> declarar_variable ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 103


state 68

    (49) asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .

    $end            reduce using rule 49 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)


state 69

    (63) tipos_datos -> NUMERO .

    PUNTOCOMA       reduce using rule 63 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 63 (tipos_datos -> NUMERO .)
    $end            reduce using rule 63 (tipos_datos -> NUMERO .)
    RPAREN          reduce using rule 63 (tipos_datos -> NUMERO .)


state 70

    (65) tipos_datos -> FLOTANTE .

    PUNTOCOMA       reduce using rule 65 (tipos_datos -> FLOTANTE .)
    COMA            reduce using rule 65 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 65 (tipos_datos -> FLOTANTE .)
    RPAREN          reduce using rule 65 (tipos_datos -> FLOTANTE .)


state 71

    (61) iniciar_estructuras -> NEW . VARIABLE LPAREN RPAREN PUNTOCOMA

    VARIABLE        shift and go to state 104


state 72

    (21) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .

    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)


state 73

    (24) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)


state 74

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)


state 75

    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)


state 76

    (45) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 45 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 77

    (47) asignar_variable -> VARIABLE ASIGNAR VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 105


state 78

    (48) asignar_variable -> VARIABLE ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 106


state 79

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICAR resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)

  ! MAS             [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MENOS           [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MULTIPLICAR     [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! $end            [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! RPAREN          [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]


state 80

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .

    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)


state 81

    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)


state 82

    (55) metodos_array -> METODO_POP_ARRAY LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 107


state 83

    (56) metodos_array -> METODO_PUSH_ARRAY LPAREN . MASPARAMETROS RPAREN PUNTOCOMA
    (74) MASPARAMETROS -> . PARAMETROS
    (75) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (76) PARAMETROS -> . tipos_datos
    (77) PARAMETROS -> . VARIABLE
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 111
    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    MASPARAMETROS                  shift and go to state 108
    PARAMETROS                     shift and go to state 109
    tipos_datos                    shift and go to state 110
    booleano_tipo                  shift and go to state 19

state 84

    (57) metodos_set -> METODO_ADD_SET LPAREN . MASPARAMETROS RPAREN PUNTOCOMA
    (74) MASPARAMETROS -> . PARAMETROS
    (75) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (76) PARAMETROS -> . tipos_datos
    (77) PARAMETROS -> . VARIABLE
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 111
    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    MASPARAMETROS                  shift and go to state 112
    PARAMETROS                     shift and go to state 109
    tipos_datos                    shift and go to state 110
    booleano_tipo                  shift and go to state 19

state 85

    (58) metodos_set -> METODO_SIZE_SET PUNTOCOMA .

    $end            reduce using rule 58 (metodos_set -> METODO_SIZE_SET PUNTOCOMA .)


state 86

    (59) metodos_map -> METODO_SET LPAREN . tipos_datos COMA tipos_datos RPAREN PUNTOCOMA
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 113
    booleano_tipo                  shift and go to state 19

state 87

    (60) metodos_map -> METODO_HAS LPAREN . tipos_datos RPAREN PUNTOCOMA
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 114
    booleano_tipo                  shift and go to state 19

state 88

    (73) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (74) MASPARAMETROS -> . PARAMETROS
    (75) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (76) PARAMETROS -> . tipos_datos
    (77) PARAMETROS -> . VARIABLE
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 111
    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    MASPARAMETROS                  shift and go to state 115
    PARAMETROS                     shift and go to state 109
    tipos_datos                    shift and go to state 110
    booleano_tipo                  shift and go to state 19

state 89

    (20) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .

    MAS             reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MENOS           reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MULTIPLICAR     reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    DIVIDIR         reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    $end            reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    RPAREN          reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)


state 90

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .

    MAS             reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MENOS           reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MULTIPLICAR     reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    DIVIDIR         reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    $end            reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)


state 91

    (50) declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .

    ASIGNAR         reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)
    $end            reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)


state 92

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .

    $end            reduce using rule 32 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)


state 93

    (33) COMPARACION -> VARIABLE .

    $end            reduce using rule 33 (COMPARACION -> VARIABLE .)


state 94

    (34) COMPARACION -> NUMERO .

    $end            reduce using rule 34 (COMPARACION -> NUMERO .)


state 95

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    RPAREN          reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! MAS             [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MENOS           [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 65

state 96

    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .
    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! MAS             [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MENOS           [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 31

state 97

    (20) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 97
    NUMERO          shift and go to state 52
    VARIABLE        shift and go to state 98

    EXPRESSION_MAT_NUMERO          shift and go to state 50

state 98

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 116

state 99

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    RPAREN          reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! MAS             [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MENOS           [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 66

state 100

    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .
    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

  ! MAS             [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MENOS           [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 36

state 101

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 54
    LPAREN          shift and go to state 101
    VARIABLE        shift and go to state 102

    EXPRESSION_MAT_FLOTANTE        shift and go to state 51

state 102

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTIPLICAR     shift and go to state 34
    DIVIDIR         shift and go to state 35

    OPERATOR_MAT                   shift and go to state 117

state 103

    (46) asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 46 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)


state 104

    (61) iniciar_estructuras -> NEW VARIABLE . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 118


state 105

    (47) asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .

    $end            reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)


state 106

    (48) asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)


state 107

    (55) metodos_array -> METODO_POP_ARRAY LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 119


state 108

    (56) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 120


state 109

    (74) MASPARAMETROS -> PARAMETROS .
    (75) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    RPAREN          reduce using rule 74 (MASPARAMETROS -> PARAMETROS .)
    COMA            shift and go to state 121


state 110

    (76) PARAMETROS -> tipos_datos .

    COMA            reduce using rule 76 (PARAMETROS -> tipos_datos .)
    RPAREN          reduce using rule 76 (PARAMETROS -> tipos_datos .)


state 111

    (77) PARAMETROS -> VARIABLE .

    COMA            reduce using rule 77 (PARAMETROS -> VARIABLE .)
    RPAREN          reduce using rule 77 (PARAMETROS -> VARIABLE .)


state 112

    (57) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 122


state 113

    (59) metodos_map -> METODO_SET LPAREN tipos_datos . COMA tipos_datos RPAREN PUNTOCOMA

    COMA            shift and go to state 123


state 114

    (60) metodos_map -> METODO_HAS LPAREN tipos_datos . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 124


state 115

    (73) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE

    RPAREN          shift and go to state 125


state 116

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO

    VARIABLE        shift and go to state 126
    NUMERO          shift and go to state 80


state 117

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 127
    FLOTANTE        shift and go to state 81


state 118

    (61) iniciar_estructuras -> NEW VARIABLE LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 128


state 119

    (55) metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 55 (metodos_array -> METODO_POP_ARRAY LPAREN RPAREN PUNTOCOMA .)


state 120

    (56) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 129


state 121

    (75) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (74) MASPARAMETROS -> . PARAMETROS
    (75) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (76) PARAMETROS -> . tipos_datos
    (77) PARAMETROS -> . VARIABLE
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 111
    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    PARAMETROS                     shift and go to state 109
    MASPARAMETROS                  shift and go to state 130
    tipos_datos                    shift and go to state 110
    booleano_tipo                  shift and go to state 19

state 122

    (57) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 131


state 123

    (59) metodos_map -> METODO_SET LPAREN tipos_datos COMA . tipos_datos RPAREN PUNTOCOMA
    (62) tipos_datos -> . booleano_tipo
    (63) tipos_datos -> . NUMERO
    (64) tipos_datos -> . CADENA
    (65) tipos_datos -> . FLOTANTE
    (66) tipos_datos -> . NULL
    (70) booleano_tipo -> . TRUE
    (71) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 69
    CADENA          shift and go to state 20
    FLOTANTE        shift and go to state 70
    NULL            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    tipos_datos                    shift and go to state 132
    booleano_tipo                  shift and go to state 19

state 124

    (60) metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 133


state 125

    (73) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE

    ILLAVE          shift and go to state 134


state 126

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)


state 127

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)


state 128

    (61) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 135


state 129

    (56) metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA .

    $end            reduce using rule 56 (metodos_array -> METODO_PUSH_ARRAY LPAREN MASPARAMETROS RPAREN PUNTOCOMA .)


state 130

    (75) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 75 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 131

    (57) metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA .

    $end            reduce using rule 57 (metodos_set -> METODO_ADD_SET LPAREN MASPARAMETROS RPAREN PUNTOCOMA .)


state 132

    (59) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 136


state 133

    (60) metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA .

    $end            reduce using rule 60 (metodos_map -> METODO_HAS LPAREN tipos_datos RPAREN PUNTOCOMA .)


state 134

    (73) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE

    DLLAVE          shift and go to state 137


state 135

    (61) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 61 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)


state 136

    (59) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 138


state 137

    (73) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 73 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)


state 138

    (59) metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA .

    $end            reduce using rule 59 (metodos_map -> METODO_SET LPAREN tipos_datos COMA tipos_datos RPAREN PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 95 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 95 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 95 resolved as shift
WARNING: shift/reduce conflict for MAS in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 96 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 96 resolved as shift
WARNING: shift/reduce conflict for MAS in state 99 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 99 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 99 resolved as shift
WARNING: shift/reduce conflict for MAS in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 100 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 100 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (EXPRESSION -> NUMERO)
WARNING: rejected rule (tipos_datos -> NUMERO) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> FLOTANTE)
WARNING: rejected rule (tipos_datos -> FLOTANTE) in state 8
WARNING: reduce/reduce conflict in state 79 resolved using rule (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE)
WARNING: rejected rule (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE) in state 79
