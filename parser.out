Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARGUMENTS
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FOR
    ICORCHETE
    IF
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    METODO_ADD_SET
    METODO_HAS
    METODO_POP_ARRAY
    METODO_PUSH_ARRAY
    METODO_SET
    METODO_SIZE_SET
    MODULO
    NEGACION
    NEW
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    RETURN
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     OPERATOR_MAT -> MAS
Rule 3     OPERATOR_MAT -> MENOS
Rule 4     OPERATOR_MAT -> MULTIPLICAR
Rule 5     OPERATOR_MAT -> DIVIDIR
Rule 6     EXPRESSION -> asignar_variable
Rule 7     EXPRESSION -> grupo_datos
Rule 8     EXPRESSION -> FUNCTIONS
Rule 9     EXPRESSION -> declarar_variable
Rule 10    EXPRESSION -> NUMERO
Rule 11    EXPRESSION -> FLOTANTE
Rule 12    EXPRESSION -> EXPRESSION_MAT
Rule 13    EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA
Rule 14    EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS
Rule 15    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO
Rule 16    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE
Rule 17    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
Rule 18    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
Rule 19    EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN
Rule 20    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO
Rule 21    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE
Rule 22    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO
Rule 23    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE
Rule 24    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
Rule 25    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
Rule 26    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE
Rule 27    EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
Rule 28    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE
Rule 29    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE
Rule 30    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE
Rule 31    EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION
Rule 32    COMPARACION -> VARIABLE
Rule 33    COMPARACION -> NUMERO
Rule 34    COMPARACION -> BOOLEANO
Rule 35    OPERATOR_COMP_MAT -> IGUALDADESTRICTA
Rule 36    OPERATOR_COMP_MAT -> MAYORIGUAL
Rule 37    OPERATOR_COMP_MAT -> MENORIGUAL
Rule 38    OPERATOR_COMP_MAT -> MENOR_QUE
Rule 39    OPERATOR_COMP_MAT -> MAYOR_QUE
Rule 40    OPERATOR_COMP_MAT -> AND
Rule 41    OPERATOR_COMP_MAT -> OR
Rule 42    OPERATOR_COMP_MAT -> NOESIGUAL
Rule 43    grupo_datos -> tipos_datos
Rule 44    grupo_datos -> tipos_datos COMA grupo_datos
Rule 45    asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA
Rule 46    asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA
Rule 47    asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA
Rule 48    declarar_variable -> tipo_variable VARIABLE PUNTOCOMA
Rule 49    declarar_variable -> tipo_variable VARIABLE
Rule 50    tipos_datos -> booleano_tipo
Rule 51    tipos_datos -> NUMERO
Rule 52    tipos_datos -> CADENA
Rule 53    tipos_datos -> FLOTANTE
Rule 54    tipos_datos -> NULL
Rule 55    tipo_variable -> VAR
Rule 56    tipo_variable -> LET
Rule 57    tipo_variable -> CONST
Rule 58    booleano_tipo -> TRUE
Rule 59    booleano_tipo -> FALSE
Rule 60    cadenas_caracteres -> CADENA
Rule 61    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 62    MASPARAMETROS -> PARAMETROS
Rule 63    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 64    PARAMETROS -> tipos_datos
Rule 65    PARAMETROS -> VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 40
ARGUMENTS            : 
ASIGNAR              : 45 46 47
AWAIT                : 
BOOLEANO             : 34
BREAK                : 
CADENA               : 52 60
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 44 63
COMENTARIO           : 
CONST                : 57
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 5
DIVISIONIGUAL        : 
DLLAVE               : 61
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 59
FINALLY              : 
FLOTANTE             : 11 25 26 26 29 30 53
FOR                  : 
FUNCTION             : 61
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 35
ILLAVE               : 61
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 56
LPAREN               : 19 27 61
MAS                  : 2
MASIGUAL             : 
MAYORIGUAL           : 36
MAYOR_QUE            : 39
MENORIGUAL           : 37
MENOR_QUE            : 38
MENOS                : 3
MENOSIGUAL           : 
METODO_ADD_SET       : 
METODO_HAS           : 
METODO_POP_ARRAY     : 
METODO_PUSH_ARRAY    : 
METODO_SET           : 
METODO_SIZE_SET      : 
MODULO               : 
MULTIPLICAR          : 4
NEGACION             : 
NEW                  : 
NOESIGUAL            : 42
NULL                 : 54
NUMERO               : 10 18 20 20 22 23 33 51
OR                   : 41
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOCOMA            : 45 46 47 48
RETURN               : 
RPAREN               : 19 27 61
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 58
TRY                  : 
TYPEOF               : 
VAR                  : 55
VARIABLE             : 21 21 22 23 28 28 29 30 32 46 46 47 48 49 61 65
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMPARACION          : 31 31
EXPRESSION           : 1
EXPRESSION_CONDICION_BOOLEANA : 13
EXPRESSION_MAT       : 12
EXPRESSION_MAT_FLOTANTE : 16 24 24 25 27
EXPRESSION_MAT_NUMERO : 15 17 17 18 19
EXPRESSION_MAT_OPTIONS : 14
FUNCTIONS            : 8
MASPARAMETROS        : 61 63
OPERATOR_COMP_MAT    : 31
OPERATOR_MAT         : 17 18 20 21 22 23 24 25 26 28 29 30
PARAMETROS           : 62 63
STATEMENT            : 0
asignar_variable     : 6
booleano_tipo        : 50
cadenas_caracteres   : 
declarar_variable    : 9 45
grupo_datos          : 7 44
tipo_variable        : 48 49
tipos_datos          : 43 44 45 47 64

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (6) EXPRESSION -> . asignar_variable
    (7) EXPRESSION -> . grupo_datos
    (8) EXPRESSION -> . FUNCTIONS
    (9) EXPRESSION -> . declarar_variable
    (10) EXPRESSION -> . NUMERO
    (11) EXPRESSION -> . FLOTANTE
    (12) EXPRESSION -> . EXPRESSION_MAT
    (13) EXPRESSION -> . EXPRESSION_CONDICION_BOOLEANA
    (45) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (46) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (47) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (43) grupo_datos -> . tipos_datos
    (44) grupo_datos -> . tipos_datos COMA grupo_datos
    (61) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (48) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (49) declarar_variable -> . tipo_variable VARIABLE
    (14) EXPRESSION_MAT -> . EXPRESSION_MAT_OPTIONS
    (31) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (55) tipo_variable -> . VAR
    (56) tipo_variable -> . LET
    (57) tipo_variable -> . CONST
    (15) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_NUMERO
    (16) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_FLOTANTE
    (32) COMPARACION -> . VARIABLE
    (33) COMPARACION -> . NUMERO
    (34) COMPARACION -> . BOOLEANO
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 7
    FLOTANTE        shift and go to state 8
    VARIABLE        shift and go to state 12
    FUNCTION        shift and go to state 13
    CADENA          shift and go to state 19
    NULL            shift and go to state 20
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    BOOLEANO        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LPAREN          shift and go to state 14

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    asignar_variable               shift and go to state 3
    grupo_datos                    shift and go to state 4
    FUNCTIONS                      shift and go to state 5
    declarar_variable              shift and go to state 6
    EXPRESSION_MAT                 shift and go to state 9
    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 10
    tipos_datos                    shift and go to state 11
    tipo_variable                  shift and go to state 15
    EXPRESSION_MAT_OPTIONS         shift and go to state 16
    COMPARACION                    shift and go to state 17
    booleano_tipo                  shift and go to state 18
    EXPRESSION_MAT_NUMERO          shift and go to state 24
    EXPRESSION_MAT_FLOTANTE        shift and go to state 25

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (6) EXPRESSION -> asignar_variable .

    $end            reduce using rule 6 (EXPRESSION -> asignar_variable .)


state 4

    (7) EXPRESSION -> grupo_datos .

    $end            reduce using rule 7 (EXPRESSION -> grupo_datos .)


state 5

    (8) EXPRESSION -> FUNCTIONS .

    $end            reduce using rule 8 (EXPRESSION -> FUNCTIONS .)


state 6

    (9) EXPRESSION -> declarar_variable .
    (45) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA

    $end            reduce using rule 9 (EXPRESSION -> declarar_variable .)
    ASIGNAR         shift and go to state 29


state 7

    (10) EXPRESSION -> NUMERO .
    (51) tipos_datos -> NUMERO .
    (33) COMPARACION -> NUMERO .
    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> NUMERO .)
    $end            reduce using rule 10 (EXPRESSION -> NUMERO .)
    COMA            reduce using rule 51 (tipos_datos -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 33 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 33 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 33 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 33 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 33 (COMPARACION -> NUMERO .)
    AND             reduce using rule 33 (COMPARACION -> NUMERO .)
    OR              reduce using rule 33 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 33 (COMPARACION -> NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! $end            [ reduce using rule 51 (tipos_datos -> NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 30

state 8

    (11) EXPRESSION -> FLOTANTE .
    (53) tipos_datos -> FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> FLOTANTE .)
    $end            reduce using rule 11 (EXPRESSION -> FLOTANTE .)
    COMA            reduce using rule 53 (tipos_datos -> FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! $end            [ reduce using rule 53 (tipos_datos -> FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 35

state 9

    (12) EXPRESSION -> EXPRESSION_MAT .

    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION_MAT .)


state 10

    (13) EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .)


state 11

    (43) grupo_datos -> tipos_datos .
    (44) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 43 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 36


state 12

    (46) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (47) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA
    (32) COMPARACION -> VARIABLE .
    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    ASIGNAR         shift and go to state 37
    IGUALDADESTRICTA reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 32 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 32 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 32 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 32 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 32 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 38

state 13

    (61) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    VARIABLE        shift and go to state 39


state 14

    (19) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 14
    NUMERO          shift and go to state 42
    VARIABLE        shift and go to state 43
    FLOTANTE        shift and go to state 44

    EXPRESSION_MAT_NUMERO          shift and go to state 40
    EXPRESSION_MAT_FLOTANTE        shift and go to state 41

state 15

    (48) declarar_variable -> tipo_variable . VARIABLE PUNTOCOMA
    (49) declarar_variable -> tipo_variable . VARIABLE

    VARIABLE        shift and go to state 45


state 16

    (14) EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .

    $end            reduce using rule 14 (EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .)


state 17

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION . OPERATOR_COMP_MAT COMPARACION
    (35) OPERATOR_COMP_MAT -> . IGUALDADESTRICTA
    (36) OPERATOR_COMP_MAT -> . MAYORIGUAL
    (37) OPERATOR_COMP_MAT -> . MENORIGUAL
    (38) OPERATOR_COMP_MAT -> . MENOR_QUE
    (39) OPERATOR_COMP_MAT -> . MAYOR_QUE
    (40) OPERATOR_COMP_MAT -> . AND
    (41) OPERATOR_COMP_MAT -> . OR
    (42) OPERATOR_COMP_MAT -> . NOESIGUAL

    IGUALDADESTRICTA shift and go to state 47
    MAYORIGUAL      shift and go to state 48
    MENORIGUAL      shift and go to state 49
    MENOR_QUE       shift and go to state 50
    MAYOR_QUE       shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53
    NOESIGUAL       shift and go to state 54

    OPERATOR_COMP_MAT              shift and go to state 46

state 18

    (50) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 50 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 50 (tipos_datos -> booleano_tipo .)
    PUNTOCOMA       reduce using rule 50 (tipos_datos -> booleano_tipo .)
    RPAREN          reduce using rule 50 (tipos_datos -> booleano_tipo .)


state 19

    (52) tipos_datos -> CADENA .

    COMA            reduce using rule 52 (tipos_datos -> CADENA .)
    $end            reduce using rule 52 (tipos_datos -> CADENA .)
    PUNTOCOMA       reduce using rule 52 (tipos_datos -> CADENA .)
    RPAREN          reduce using rule 52 (tipos_datos -> CADENA .)


state 20

    (54) tipos_datos -> NULL .

    COMA            reduce using rule 54 (tipos_datos -> NULL .)
    $end            reduce using rule 54 (tipos_datos -> NULL .)
    PUNTOCOMA       reduce using rule 54 (tipos_datos -> NULL .)
    RPAREN          reduce using rule 54 (tipos_datos -> NULL .)


state 21

    (55) tipo_variable -> VAR .

    VARIABLE        reduce using rule 55 (tipo_variable -> VAR .)


state 22

    (56) tipo_variable -> LET .

    VARIABLE        reduce using rule 56 (tipo_variable -> LET .)


state 23

    (57) tipo_variable -> CONST .

    VARIABLE        reduce using rule 57 (tipo_variable -> CONST .)


state 24

    (15) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 15 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 55

state 25

    (16) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 16 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 56

state 26

    (34) COMPARACION -> BOOLEANO .

    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    AND             reduce using rule 34 (COMPARACION -> BOOLEANO .)
    OR              reduce using rule 34 (COMPARACION -> BOOLEANO .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    $end            reduce using rule 34 (COMPARACION -> BOOLEANO .)


state 27

    (58) booleano_tipo -> TRUE .

    COMA            reduce using rule 58 (booleano_tipo -> TRUE .)
    $end            reduce using rule 58 (booleano_tipo -> TRUE .)
    PUNTOCOMA       reduce using rule 58 (booleano_tipo -> TRUE .)
    RPAREN          reduce using rule 58 (booleano_tipo -> TRUE .)


state 28

    (59) booleano_tipo -> FALSE .

    COMA            reduce using rule 59 (booleano_tipo -> FALSE .)
    $end            reduce using rule 59 (booleano_tipo -> FALSE .)
    PUNTOCOMA       reduce using rule 59 (booleano_tipo -> FALSE .)
    RPAREN          reduce using rule 59 (booleano_tipo -> FALSE .)


state 29

    (45) asignar_variable -> declarar_variable ASIGNAR . tipos_datos PUNTOCOMA
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 58
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 59
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 57
    booleano_tipo                  shift and go to state 18

state 30

    (20) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . VARIABLE

    NUMERO          shift and go to state 60
    VARIABLE        shift and go to state 61


state 31

    (2) OPERATOR_MAT -> MAS .

    NUMERO          reduce using rule 2 (OPERATOR_MAT -> MAS .)
    VARIABLE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    FLOTANTE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    LPAREN          reduce using rule 2 (OPERATOR_MAT -> MAS .)


state 32

    (3) OPERATOR_MAT -> MENOS .

    NUMERO          reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    VARIABLE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    FLOTANTE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    LPAREN          reduce using rule 3 (OPERATOR_MAT -> MENOS .)


state 33

    (4) OPERATOR_MAT -> MULTIPLICAR .

    NUMERO          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    VARIABLE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    LPAREN          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)


state 34

    (5) OPERATOR_MAT -> DIVIDIR .

    NUMERO          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    VARIABLE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    FLOTANTE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    LPAREN          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)


state 35

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . VARIABLE

    FLOTANTE        shift and go to state 62
    VARIABLE        shift and go to state 63


state 36

    (44) grupo_datos -> tipos_datos COMA . grupo_datos
    (43) grupo_datos -> . tipos_datos
    (44) grupo_datos -> . tipos_datos COMA grupo_datos
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 58
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 59
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 11
    grupo_datos                    shift and go to state 64
    booleano_tipo                  shift and go to state 18

state 37

    (46) asignar_variable -> VARIABLE ASIGNAR . VARIABLE PUNTOCOMA
    (47) asignar_variable -> VARIABLE ASIGNAR . tipos_datos PUNTOCOMA
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 65
    NUMERO          shift and go to state 58
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 59
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 66
    booleano_tipo                  shift and go to state 18

state 38

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 67
    NUMERO          shift and go to state 68
    FLOTANTE        shift and go to state 69


state 39

    (61) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE

    LPAREN          shift and go to state 70


state 40

    (19) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO . RPAREN
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 71
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 55

state 41

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE . RPAREN
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 72
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 56

state 42

    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 30

state 43

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 38

state 44

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 35

state 45

    (48) declarar_variable -> tipo_variable VARIABLE . PUNTOCOMA
    (49) declarar_variable -> tipo_variable VARIABLE .

    PUNTOCOMA       shift and go to state 73
    ASIGNAR         reduce using rule 49 (declarar_variable -> tipo_variable VARIABLE .)
    $end            reduce using rule 49 (declarar_variable -> tipo_variable VARIABLE .)


state 46

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT . COMPARACION
    (32) COMPARACION -> . VARIABLE
    (33) COMPARACION -> . NUMERO
    (34) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 75
    NUMERO          shift and go to state 76
    BOOLEANO        shift and go to state 26

    COMPARACION                    shift and go to state 74

state 47

    (35) OPERATOR_COMP_MAT -> IGUALDADESTRICTA .

    VARIABLE        reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    NUMERO          reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    BOOLEANO        reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)


state 48

    (36) OPERATOR_COMP_MAT -> MAYORIGUAL .

    VARIABLE        reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    NUMERO          reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    BOOLEANO        reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)


state 49

    (37) OPERATOR_COMP_MAT -> MENORIGUAL .

    VARIABLE        reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    NUMERO          reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    BOOLEANO        reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)


state 50

    (38) OPERATOR_COMP_MAT -> MENOR_QUE .

    VARIABLE        reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    NUMERO          reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    BOOLEANO        reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)


state 51

    (39) OPERATOR_COMP_MAT -> MAYOR_QUE .

    VARIABLE        reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    NUMERO          reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    BOOLEANO        reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)


state 52

    (40) OPERATOR_COMP_MAT -> AND .

    VARIABLE        reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)
    NUMERO          reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)
    BOOLEANO        reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)


state 53

    (41) OPERATOR_COMP_MAT -> OR .

    VARIABLE        reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)
    NUMERO          reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)
    BOOLEANO        reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)


state 54

    (42) OPERATOR_COMP_MAT -> NOESIGUAL .

    VARIABLE        reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    NUMERO          reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    BOOLEANO        reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)


state 55

    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . NUMERO
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 78
    LPAREN          shift and go to state 79
    VARIABLE        shift and go to state 80

    EXPRESSION_MAT_NUMERO          shift and go to state 77

state 56

    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . FLOTANTE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 82
    LPAREN          shift and go to state 83
    VARIABLE        shift and go to state 84

    EXPRESSION_MAT_FLOTANTE        shift and go to state 81

state 57

    (45) asignar_variable -> declarar_variable ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 85


state 58

    (51) tipos_datos -> NUMERO .

    PUNTOCOMA       reduce using rule 51 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 51 (tipos_datos -> NUMERO .)
    $end            reduce using rule 51 (tipos_datos -> NUMERO .)
    RPAREN          reduce using rule 51 (tipos_datos -> NUMERO .)


state 59

    (53) tipos_datos -> FLOTANTE .

    PUNTOCOMA       reduce using rule 53 (tipos_datos -> FLOTANTE .)
    COMA            reduce using rule 53 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 53 (tipos_datos -> FLOTANTE .)
    RPAREN          reduce using rule 53 (tipos_datos -> FLOTANTE .)


state 60

    (20) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .

    MAS             reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    $end            reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)


state 61

    (23) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)


state 62

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)


state 63

    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)


state 64

    (44) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 44 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 65

    (46) asignar_variable -> VARIABLE ASIGNAR VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 86


state 66

    (47) asignar_variable -> VARIABLE ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 87


state 67

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICAR resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)

  ! MAS             [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MENOS           [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MULTIPLICAR     [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! $end            [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! RPAREN          [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]


state 68

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .

    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)


state 69

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)


state 70

    (61) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (62) MASPARAMETROS -> . PARAMETROS
    (63) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (64) PARAMETROS -> . tipos_datos
    (65) PARAMETROS -> . VARIABLE
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 88
    NUMERO          shift and go to state 58
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 59
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    MASPARAMETROS                  shift and go to state 89
    PARAMETROS                     shift and go to state 90
    tipos_datos                    shift and go to state 91
    booleano_tipo                  shift and go to state 18

state 71

    (19) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .

    MAS             reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MENOS           reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MULTIPLICAR     reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    DIVIDIR         reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    $end            reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    RPAREN          reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)


state 72

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .

    MAS             reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MENOS           reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MULTIPLICAR     reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    DIVIDIR         reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    $end            reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)


state 73

    (48) declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .

    ASIGNAR         reduce using rule 48 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)
    $end            reduce using rule 48 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)


state 74

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .

    $end            reduce using rule 31 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)


state 75

    (32) COMPARACION -> VARIABLE .

    $end            reduce using rule 32 (COMPARACION -> VARIABLE .)


state 76

    (33) COMPARACION -> NUMERO .

    $end            reduce using rule 33 (COMPARACION -> NUMERO .)


state 77

    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    RPAREN          reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MENOS           [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 55

state 78

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .
    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MENOS           [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 30

state 79

    (19) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 79
    NUMERO          shift and go to state 42
    VARIABLE        shift and go to state 80

    EXPRESSION_MAT_NUMERO          shift and go to state 40

state 80

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 92

state 81

    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    RPAREN          reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MENOS           [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 56

state 82

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MENOS           [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 35

state 83

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 44
    LPAREN          shift and go to state 83
    VARIABLE        shift and go to state 84

    EXPRESSION_MAT_FLOTANTE        shift and go to state 41

state 84

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 93

state 85

    (45) asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 45 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)


state 86

    (46) asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .

    $end            reduce using rule 46 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)


state 87

    (47) asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)


state 88

    (65) PARAMETROS -> VARIABLE .

    COMA            reduce using rule 65 (PARAMETROS -> VARIABLE .)
    RPAREN          reduce using rule 65 (PARAMETROS -> VARIABLE .)


state 89

    (61) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE

    RPAREN          shift and go to state 94


state 90

    (62) MASPARAMETROS -> PARAMETROS .
    (63) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    RPAREN          reduce using rule 62 (MASPARAMETROS -> PARAMETROS .)
    COMA            shift and go to state 95


state 91

    (64) PARAMETROS -> tipos_datos .

    COMA            reduce using rule 64 (PARAMETROS -> tipos_datos .)
    RPAREN          reduce using rule 64 (PARAMETROS -> tipos_datos .)


state 92

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO

    VARIABLE        shift and go to state 96
    NUMERO          shift and go to state 68


state 93

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 69


state 94

    (61) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE

    ILLAVE          shift and go to state 98


state 95

    (63) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (62) MASPARAMETROS -> . PARAMETROS
    (63) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (64) PARAMETROS -> . tipos_datos
    (65) PARAMETROS -> . VARIABLE
    (50) tipos_datos -> . booleano_tipo
    (51) tipos_datos -> . NUMERO
    (52) tipos_datos -> . CADENA
    (53) tipos_datos -> . FLOTANTE
    (54) tipos_datos -> . NULL
    (58) booleano_tipo -> . TRUE
    (59) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 88
    NUMERO          shift and go to state 58
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 59
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    PARAMETROS                     shift and go to state 90
    MASPARAMETROS                  shift and go to state 99
    tipos_datos                    shift and go to state 91
    booleano_tipo                  shift and go to state 18

state 96

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)


state 97

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)


state 98

    (61) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE

    DLLAVE          shift and go to state 100


state 99

    (63) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 63 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 100

    (61) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 61 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 77 resolved as shift
WARNING: shift/reduce conflict for MAS in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 78 resolved as shift
WARNING: shift/reduce conflict for MAS in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 81 resolved as shift
WARNING: shift/reduce conflict for MAS in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 82 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (EXPRESSION -> NUMERO)
WARNING: rejected rule (tipos_datos -> NUMERO) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> FLOTANTE)
WARNING: rejected rule (tipos_datos -> FLOTANTE) in state 8
WARNING: reduce/reduce conflict in state 67 resolved using rule (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE)
WARNING: rejected rule (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE) in state 67
