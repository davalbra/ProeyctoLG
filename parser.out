Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    ARGUMENTS
    AWAIT
    BOOLEANO
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVIDIR
    DIVISIONIGUAL
    DLLAVE
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FOR
    FUNCTION
    ICORCHETE
    IF
    IGUALDADESTRICTA
    ILLAVE
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    LPAREN
    MAS
    MASIGUAL
    MAYORIGUAL
    MAYOR_QUE
    MENORIGUAL
    MENOR_QUE
    MENOS
    MENOSIGUAL
    METODO_ADD_SET
    METODO_HAS
    METODO_POP_ARRAY
    METODO_PUSH_ARRAY
    METODO_SET
    METODO_SIZE_SET
    MODULO
    MULTIPLICAR
    NEGACION
    NEW
    NOESIGUAL
    OR
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTOCOMA
    RETURN
    RPAREN
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> asignar_variable
Rule 2     expresion -> grupo_datos
Rule 3     grupo_datos -> tipos_datos
Rule 4     grupo_datos -> tipos_datos COMA grupo_datos
Rule 5     asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos
Rule 6     tipos_datos -> booleano_tipo
Rule 7     tipos_datos -> NUMERO
Rule 8     tipos_datos -> CADENA
Rule 9     tipos_datos -> FLOTANTE
Rule 10    tipos_datos -> NULL
Rule 11    tipo_variable -> VAR
Rule 12    tipo_variable -> LET
Rule 13    tipo_variable -> CONST
Rule 14    booleano_tipo -> TRUE
Rule 15    booleano_tipo -> FALSE
Rule 16    cadenas_caracteres -> CADENA

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
ARGUMENTS            : 
ASIGNAR              : 5
AWAIT                : 
BOOLEANO             : 
BREAK                : 
CADENA               : 8 16
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 4
COMENTARIO           : 
CONST                : 13
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 
DIVISIONIGUAL        : 
DLLAVE               : 
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 15
FINALLY              : 
FLOTANTE             : 9
FOR                  : 
FUNCTION             : 
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 
ILLAVE               : 
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 12
LPAREN               : 
MAS                  : 
MASIGUAL             : 
MAYORIGUAL           : 
MAYOR_QUE            : 
MENORIGUAL           : 
MENOR_QUE            : 
MENOS                : 
MENOSIGUAL           : 
METODO_ADD_SET       : 
METODO_HAS           : 
METODO_POP_ARRAY     : 
METODO_PUSH_ARRAY    : 
METODO_SET           : 
METODO_SIZE_SET      : 
MODULO               : 
MULTIPLICAR          : 
NEGACION             : 
NEW                  : 
NOESIGUAL            : 
NULL                 : 10
NUMERO               : 7
OR                   : 
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTOCOMA            : 
RETURN               : 
RPAREN               : 
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 14
TRY                  : 
TYPEOF               : 
VAR                  : 11
VARIABLE             : 5
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignar_variable     : 1
booleano_tipo        : 6
cadenas_caracteres   : 
expresion            : 0
grupo_datos          : 2 4
tipo_variable        : 5
tipos_datos          : 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . asignar_variable
    (2) expresion -> . grupo_datos
    (5) asignar_variable -> . tipo_variable VARIABLE ASIGNAR tipos_datos
    (3) grupo_datos -> . tipos_datos
    (4) grupo_datos -> . tipos_datos COMA grupo_datos
    (11) tipo_variable -> . VAR
    (12) tipo_variable -> . LET
    (13) tipo_variable -> . CONST
    (6) tipos_datos -> . booleano_tipo
    (7) tipos_datos -> . NUMERO
    (8) tipos_datos -> . CADENA
    (9) tipos_datos -> . FLOTANTE
    (10) tipos_datos -> . NULL
    (14) booleano_tipo -> . TRUE
    (15) booleano_tipo -> . FALSE

    VAR             shift and go to state 6
    LET             shift and go to state 7
    CONST           shift and go to state 8
    NUMERO          shift and go to state 10
    CADENA          shift and go to state 11
    FLOTANTE        shift and go to state 12
    NULL            shift and go to state 13
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15

    expresion                      shift and go to state 1
    asignar_variable               shift and go to state 2
    grupo_datos                    shift and go to state 3
    tipo_variable                  shift and go to state 4
    tipos_datos                    shift and go to state 5
    booleano_tipo                  shift and go to state 9

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> asignar_variable .

    $end            reduce using rule 1 (expresion -> asignar_variable .)


state 3

    (2) expresion -> grupo_datos .

    $end            reduce using rule 2 (expresion -> grupo_datos .)


state 4

    (5) asignar_variable -> tipo_variable . VARIABLE ASIGNAR tipos_datos

    VARIABLE        shift and go to state 16


state 5

    (3) grupo_datos -> tipos_datos .
    (4) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 3 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 17


state 6

    (11) tipo_variable -> VAR .

    VARIABLE        reduce using rule 11 (tipo_variable -> VAR .)


state 7

    (12) tipo_variable -> LET .

    VARIABLE        reduce using rule 12 (tipo_variable -> LET .)


state 8

    (13) tipo_variable -> CONST .

    VARIABLE        reduce using rule 13 (tipo_variable -> CONST .)


state 9

    (6) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 6 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 6 (tipos_datos -> booleano_tipo .)


state 10

    (7) tipos_datos -> NUMERO .

    COMA            reduce using rule 7 (tipos_datos -> NUMERO .)
    $end            reduce using rule 7 (tipos_datos -> NUMERO .)


state 11

    (8) tipos_datos -> CADENA .

    COMA            reduce using rule 8 (tipos_datos -> CADENA .)
    $end            reduce using rule 8 (tipos_datos -> CADENA .)


state 12

    (9) tipos_datos -> FLOTANTE .

    COMA            reduce using rule 9 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 9 (tipos_datos -> FLOTANTE .)


state 13

    (10) tipos_datos -> NULL .

    COMA            reduce using rule 10 (tipos_datos -> NULL .)
    $end            reduce using rule 10 (tipos_datos -> NULL .)


state 14

    (14) booleano_tipo -> TRUE .

    COMA            reduce using rule 14 (booleano_tipo -> TRUE .)
    $end            reduce using rule 14 (booleano_tipo -> TRUE .)


state 15

    (15) booleano_tipo -> FALSE .

    COMA            reduce using rule 15 (booleano_tipo -> FALSE .)
    $end            reduce using rule 15 (booleano_tipo -> FALSE .)


state 16

    (5) asignar_variable -> tipo_variable VARIABLE . ASIGNAR tipos_datos

    ASIGNAR         shift and go to state 18


state 17

    (4) grupo_datos -> tipos_datos COMA . grupo_datos
    (3) grupo_datos -> . tipos_datos
    (4) grupo_datos -> . tipos_datos COMA grupo_datos
    (6) tipos_datos -> . booleano_tipo
    (7) tipos_datos -> . NUMERO
    (8) tipos_datos -> . CADENA
    (9) tipos_datos -> . FLOTANTE
    (10) tipos_datos -> . NULL
    (14) booleano_tipo -> . TRUE
    (15) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 10
    CADENA          shift and go to state 11
    FLOTANTE        shift and go to state 12
    NULL            shift and go to state 13
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15

    tipos_datos                    shift and go to state 5
    grupo_datos                    shift and go to state 19
    booleano_tipo                  shift and go to state 9

state 18

    (5) asignar_variable -> tipo_variable VARIABLE ASIGNAR . tipos_datos
    (6) tipos_datos -> . booleano_tipo
    (7) tipos_datos -> . NUMERO
    (8) tipos_datos -> . CADENA
    (9) tipos_datos -> . FLOTANTE
    (10) tipos_datos -> . NULL
    (14) booleano_tipo -> . TRUE
    (15) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 10
    CADENA          shift and go to state 11
    FLOTANTE        shift and go to state 12
    NULL            shift and go to state 13
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15

    tipos_datos                    shift and go to state 20
    booleano_tipo                  shift and go to state 9

state 19

    (4) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 4 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 20

    (5) asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos .

    $end            reduce using rule 5 (asignar_variable -> tipo_variable VARIABLE ASIGNAR tipos_datos .)

