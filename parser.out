Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARGUMENTS
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    ICORCHETE
    IF
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    METODO_ADD_SET
    METODO_HAS
    METODO_POP_ARRAY
    METODO_PUSH_ARRAY
    METODO_SET
    METODO_SIZE_SET
    MODULO
    NEGACION
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     OPERATOR_MAT -> MAS
Rule 3     OPERATOR_MAT -> MENOS
Rule 4     OPERATOR_MAT -> MULTIPLICAR
Rule 5     OPERATOR_MAT -> DIVIDIR
Rule 6     EXPRESSION -> asignar_variable
Rule 7     EXPRESSION -> ESTRUCTURA_FOR
Rule 8     EXPRESSION -> grupo_datos
Rule 9     EXPRESSION -> FUNCTIONS
Rule 10    EXPRESSION -> declarar_variable
Rule 11    EXPRESSION -> NUMERO
Rule 12    EXPRESSION -> FLOTANTE
Rule 13    EXPRESSION -> EXPRESSION_MAT
Rule 14    EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA
Rule 15    EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS
Rule 16    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO
Rule 17    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE
Rule 18    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
Rule 19    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
Rule 20    EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN
Rule 21    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO
Rule 22    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE
Rule 23    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO
Rule 24    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE
Rule 25    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
Rule 26    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
Rule 27    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE
Rule 28    EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
Rule 29    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE
Rule 30    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE
Rule 31    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE
Rule 32    EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION
Rule 33    COMPARACION -> VARIABLE
Rule 34    COMPARACION -> NUMERO
Rule 35    COMPARACION -> BOOLEANO
Rule 36    OPERATOR_COMP_MAT -> IGUALDADESTRICTA
Rule 37    OPERATOR_COMP_MAT -> MAYORIGUAL
Rule 38    OPERATOR_COMP_MAT -> MENORIGUAL
Rule 39    OPERATOR_COMP_MAT -> MENOR_QUE
Rule 40    OPERATOR_COMP_MAT -> MAYOR_QUE
Rule 41    OPERATOR_COMP_MAT -> AND
Rule 42    OPERATOR_COMP_MAT -> OR
Rule 43    OPERATOR_COMP_MAT -> NOESIGUAL
Rule 44    grupo_datos -> tipos_datos
Rule 45    grupo_datos -> tipos_datos COMA grupo_datos
Rule 46    asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA
Rule 47    asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA
Rule 48    asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA
Rule 49    asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras
Rule 50    declarar_variable -> tipo_variable VARIABLE PUNTOCOMA
Rule 51    declarar_variable -> tipo_variable VARIABLE
Rule 52    tipos_datos -> booleano_tipo
Rule 53    tipos_datos -> NUMERO
Rule 54    tipos_datos -> CADENA
Rule 55    tipos_datos -> FLOTANTE
Rule 56    tipos_datos -> NULL
Rule 57    iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA
Rule 58    tipo_variable -> VAR
Rule 59    tipo_variable -> LET
Rule 60    tipo_variable -> CONST
Rule 61    booleano_tipo -> TRUE
Rule 62    booleano_tipo -> FALSE
Rule 63    cadenas_caracteres -> CADENA
Rule 64    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 65    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
Rule 66    MASPARAMETROS -> PARAMETROS VAR
Rule 67    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 68    PARAMETROS -> tipos_datos
Rule 69    PARAMETROS -> VARIABLE
Rule 70    ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 41
ARGUMENTS            : 
ASIGNAR              : 46 47 48 49
AWAIT                : 
BOOLEANO             : 35
BREAK                : 
CADENA               : 54 63
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 45 67
COMENTARIO           : 
CONST                : 60
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 5
DIVISIONIGUAL        : 
DLLAVE               : 64 65 70
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 62
FINALLY              : 
FLOTANTE             : 12 26 27 27 30 31 55
FOR                  : 70
FUNCTION             : 64 65
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 36
ILLAVE               : 64 65 70
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 59
LPAREN               : 20 28 57 64 65 70
MAS                  : 2 70 70
MASIGUAL             : 
MAYORIGUAL           : 37
MAYOR_QUE            : 40
MENORIGUAL           : 38
MENOR_QUE            : 39
MENOS                : 3
MENOSIGUAL           : 
METODO_ADD_SET       : 
METODO_HAS           : 
METODO_POP_ARRAY     : 
METODO_PUSH_ARRAY    : 
METODO_SET           : 
METODO_SIZE_SET      : 
MODULO               : 
MULTIPLICAR          : 4
NEGACION             : 
NEW                  : 57
NOESIGUAL            : 43
NULL                 : 56
NUMERO               : 11 19 21 21 23 24 34 53
OR                   : 42
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOCOMA            : 46 47 48 50 57 70
RETURN               : 65
RPAREN               : 20 28 57 64 65 70
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 61
TRY                  : 
TYPEOF               : 
VAR                  : 58 66
VARIABLE             : 22 22 23 24 29 29 30 31 33 47 47 48 50 51 57 64 65 69 70
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMPARACION          : 32 32
ESTRUCTURA_FOR       : 7
EXPRESSION           : 1
EXPRESSION_CONDICION_BOOLEANA : 14 70
EXPRESSION_MAT       : 13
EXPRESSION_MAT_FLOTANTE : 17 25 25 26 28
EXPRESSION_MAT_NUMERO : 16 18 18 19 20
EXPRESSION_MAT_OPTIONS : 15
FUNCTIONS            : 9
MASPARAMETROS        : 64 65 65 67
OPERATOR_COMP_MAT    : 32
OPERATOR_MAT         : 18 19 21 22 23 24 25 26 27 29 30 31
PARAMETROS           : 66 67
STATEMENT            : 0
asignar_variable     : 6 70
booleano_tipo        : 52
cadenas_caracteres   : 
declarar_variable    : 10 46 49
grupo_datos          : 8 45
iniciar_estructuras  : 49
tipo_variable        : 50 51
tipos_datos          : 44 45 46 48 68

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (6) EXPRESSION -> . asignar_variable
    (7) EXPRESSION -> . ESTRUCTURA_FOR
    (8) EXPRESSION -> . grupo_datos
    (9) EXPRESSION -> . FUNCTIONS
    (10) EXPRESSION -> . declarar_variable
    (11) EXPRESSION -> . NUMERO
    (12) EXPRESSION -> . FLOTANTE
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONDICION_BOOLEANA
    (46) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (47) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (70) ESTRUCTURA_FOR -> . FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (44) grupo_datos -> . tipos_datos
    (45) grupo_datos -> . tipos_datos COMA grupo_datos
    (64) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (65) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (50) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (51) declarar_variable -> . tipo_variable VARIABLE
    (15) EXPRESSION_MAT -> . EXPRESSION_MAT_OPTIONS
    (32) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (58) tipo_variable -> . VAR
    (59) tipo_variable -> . LET
    (60) tipo_variable -> . CONST
    (16) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_NUMERO
    (17) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_FLOTANTE
    (33) COMPARACION -> . VARIABLE
    (34) COMPARACION -> . NUMERO
    (35) COMPARACION -> . BOOLEANO
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 8
    FLOTANTE        shift and go to state 9
    VARIABLE        shift and go to state 13
    FOR             shift and go to state 14
    FUNCTION        shift and go to state 16
    CADENA          shift and go to state 21
    NULL            shift and go to state 22
    VAR             shift and go to state 23
    LET             shift and go to state 24
    CONST           shift and go to state 25
    BOOLEANO        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    LPAREN          shift and go to state 15

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    asignar_variable               shift and go to state 3
    ESTRUCTURA_FOR                 shift and go to state 4
    grupo_datos                    shift and go to state 5
    FUNCTIONS                      shift and go to state 6
    declarar_variable              shift and go to state 7
    EXPRESSION_MAT                 shift and go to state 10
    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 11
    tipos_datos                    shift and go to state 12
    tipo_variable                  shift and go to state 17
    EXPRESSION_MAT_OPTIONS         shift and go to state 18
    COMPARACION                    shift and go to state 19
    booleano_tipo                  shift and go to state 20
    EXPRESSION_MAT_NUMERO          shift and go to state 26
    EXPRESSION_MAT_FLOTANTE        shift and go to state 27

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (6) EXPRESSION -> asignar_variable .

    $end            reduce using rule 6 (EXPRESSION -> asignar_variable .)


state 4

    (7) EXPRESSION -> ESTRUCTURA_FOR .

    $end            reduce using rule 7 (EXPRESSION -> ESTRUCTURA_FOR .)


state 5

    (8) EXPRESSION -> grupo_datos .

    $end            reduce using rule 8 (EXPRESSION -> grupo_datos .)


state 6

    (9) EXPRESSION -> FUNCTIONS .

    $end            reduce using rule 9 (EXPRESSION -> FUNCTIONS .)


state 7

    (10) EXPRESSION -> declarar_variable .
    (46) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras

    $end            reduce using rule 10 (EXPRESSION -> declarar_variable .)
    ASIGNAR         shift and go to state 31


state 8

    (11) EXPRESSION -> NUMERO .
    (53) tipos_datos -> NUMERO .
    (34) COMPARACION -> NUMERO .
    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> NUMERO .)
    $end            reduce using rule 11 (EXPRESSION -> NUMERO .)
    COMA            reduce using rule 53 (tipos_datos -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    AND             reduce using rule 34 (COMPARACION -> NUMERO .)
    OR              reduce using rule 34 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> NUMERO .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! $end            [ reduce using rule 53 (tipos_datos -> NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 32

state 9

    (12) EXPRESSION -> FLOTANTE .
    (55) tipos_datos -> FLOTANTE .
    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 12 (EXPRESSION -> FLOTANTE .)
    $end            reduce using rule 12 (EXPRESSION -> FLOTANTE .)
    COMA            reduce using rule 55 (tipos_datos -> FLOTANTE .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! $end            [ reduce using rule 55 (tipos_datos -> FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 37

state 10

    (13) EXPRESSION -> EXPRESSION_MAT .

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)


state 11

    (14) EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .)


state 12

    (44) grupo_datos -> tipos_datos .
    (45) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 44 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 38


state 13

    (47) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA
    (33) COMPARACION -> VARIABLE .
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    ASIGNAR         shift and go to state 39
    IGUALDADESTRICTA reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 33 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 33 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 40

state 14

    (70) ESTRUCTURA_FOR -> FOR . LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    LPAREN          shift and go to state 41


state 15

    (20) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 15
    NUMERO          shift and go to state 44
    VARIABLE        shift and go to state 45
    FLOTANTE        shift and go to state 46

    EXPRESSION_MAT_NUMERO          shift and go to state 42
    EXPRESSION_MAT_FLOTANTE        shift and go to state 43

state 16

    (64) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (65) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    VARIABLE        shift and go to state 47


state 17

    (50) declarar_variable -> tipo_variable . VARIABLE PUNTOCOMA
    (51) declarar_variable -> tipo_variable . VARIABLE

    VARIABLE        shift and go to state 48


state 18

    (15) EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .

    $end            reduce using rule 15 (EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .)


state 19

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION . OPERATOR_COMP_MAT COMPARACION
    (36) OPERATOR_COMP_MAT -> . IGUALDADESTRICTA
    (37) OPERATOR_COMP_MAT -> . MAYORIGUAL
    (38) OPERATOR_COMP_MAT -> . MENORIGUAL
    (39) OPERATOR_COMP_MAT -> . MENOR_QUE
    (40) OPERATOR_COMP_MAT -> . MAYOR_QUE
    (41) OPERATOR_COMP_MAT -> . AND
    (42) OPERATOR_COMP_MAT -> . OR
    (43) OPERATOR_COMP_MAT -> . NOESIGUAL

    IGUALDADESTRICTA shift and go to state 50
    MAYORIGUAL      shift and go to state 51
    MENORIGUAL      shift and go to state 52
    MENOR_QUE       shift and go to state 53
    MAYOR_QUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    NOESIGUAL       shift and go to state 57

    OPERATOR_COMP_MAT              shift and go to state 49

state 20

    (52) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 52 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 52 (tipos_datos -> booleano_tipo .)
    PUNTOCOMA       reduce using rule 52 (tipos_datos -> booleano_tipo .)
    VAR             reduce using rule 52 (tipos_datos -> booleano_tipo .)


state 21

    (54) tipos_datos -> CADENA .

    COMA            reduce using rule 54 (tipos_datos -> CADENA .)
    $end            reduce using rule 54 (tipos_datos -> CADENA .)
    PUNTOCOMA       reduce using rule 54 (tipos_datos -> CADENA .)
    VAR             reduce using rule 54 (tipos_datos -> CADENA .)


state 22

    (56) tipos_datos -> NULL .

    COMA            reduce using rule 56 (tipos_datos -> NULL .)
    $end            reduce using rule 56 (tipos_datos -> NULL .)
    PUNTOCOMA       reduce using rule 56 (tipos_datos -> NULL .)
    VAR             reduce using rule 56 (tipos_datos -> NULL .)


state 23

    (58) tipo_variable -> VAR .

    VARIABLE        reduce using rule 58 (tipo_variable -> VAR .)


state 24

    (59) tipo_variable -> LET .

    VARIABLE        reduce using rule 59 (tipo_variable -> LET .)


state 25

    (60) tipo_variable -> CONST .

    VARIABLE        reduce using rule 60 (tipo_variable -> CONST .)


state 26

    (16) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 16 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 58

state 27

    (17) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 17 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 59

state 28

    (35) COMPARACION -> BOOLEANO .

    IGUALDADESTRICTA reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MENORIGUAL      reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MENOR_QUE       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    MAYOR_QUE       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    AND             reduce using rule 35 (COMPARACION -> BOOLEANO .)
    OR              reduce using rule 35 (COMPARACION -> BOOLEANO .)
    NOESIGUAL       reduce using rule 35 (COMPARACION -> BOOLEANO .)
    $end            reduce using rule 35 (COMPARACION -> BOOLEANO .)
    PUNTOCOMA       reduce using rule 35 (COMPARACION -> BOOLEANO .)


state 29

    (61) booleano_tipo -> TRUE .

    COMA            reduce using rule 61 (booleano_tipo -> TRUE .)
    $end            reduce using rule 61 (booleano_tipo -> TRUE .)
    PUNTOCOMA       reduce using rule 61 (booleano_tipo -> TRUE .)
    VAR             reduce using rule 61 (booleano_tipo -> TRUE .)


state 30

    (62) booleano_tipo -> FALSE .

    COMA            reduce using rule 62 (booleano_tipo -> FALSE .)
    $end            reduce using rule 62 (booleano_tipo -> FALSE .)
    PUNTOCOMA       reduce using rule 62 (booleano_tipo -> FALSE .)
    VAR             reduce using rule 62 (booleano_tipo -> FALSE .)


state 31

    (46) asignar_variable -> declarar_variable ASIGNAR . tipos_datos PUNTOCOMA
    (49) asignar_variable -> declarar_variable ASIGNAR . iniciar_estructuras
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (57) iniciar_estructuras -> . NEW VARIABLE LPAREN RPAREN PUNTOCOMA
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    NEW             shift and go to state 64
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    tipos_datos                    shift and go to state 60
    iniciar_estructuras            shift and go to state 61
    booleano_tipo                  shift and go to state 20

state 32

    (21) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . VARIABLE

    NUMERO          shift and go to state 65
    VARIABLE        shift and go to state 66


state 33

    (2) OPERATOR_MAT -> MAS .

    NUMERO          reduce using rule 2 (OPERATOR_MAT -> MAS .)
    VARIABLE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    FLOTANTE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    LPAREN          reduce using rule 2 (OPERATOR_MAT -> MAS .)


state 34

    (3) OPERATOR_MAT -> MENOS .

    NUMERO          reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    VARIABLE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    FLOTANTE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    LPAREN          reduce using rule 3 (OPERATOR_MAT -> MENOS .)


state 35

    (4) OPERATOR_MAT -> MULTIPLICAR .

    NUMERO          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    VARIABLE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    LPAREN          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)


state 36

    (5) OPERATOR_MAT -> DIVIDIR .

    NUMERO          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    VARIABLE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    FLOTANTE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    LPAREN          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)


state 37

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . VARIABLE

    FLOTANTE        shift and go to state 67
    VARIABLE        shift and go to state 68


state 38

    (45) grupo_datos -> tipos_datos COMA . grupo_datos
    (44) grupo_datos -> . tipos_datos
    (45) grupo_datos -> . tipos_datos COMA grupo_datos
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    tipos_datos                    shift and go to state 12
    grupo_datos                    shift and go to state 69
    booleano_tipo                  shift and go to state 20

state 39

    (47) asignar_variable -> VARIABLE ASIGNAR . VARIABLE PUNTOCOMA
    (48) asignar_variable -> VARIABLE ASIGNAR . tipos_datos PUNTOCOMA
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 70
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    tipos_datos                    shift and go to state 71
    booleano_tipo                  shift and go to state 20

state 40

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 72
    NUMERO          shift and go to state 73
    FLOTANTE        shift and go to state 74


state 41

    (70) ESTRUCTURA_FOR -> FOR LPAREN . asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (46) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (47) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (50) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (51) declarar_variable -> . tipo_variable VARIABLE
    (58) tipo_variable -> . VAR
    (59) tipo_variable -> . LET
    (60) tipo_variable -> . CONST

    VARIABLE        shift and go to state 76
    VAR             shift and go to state 23
    LET             shift and go to state 24
    CONST           shift and go to state 25

    asignar_variable               shift and go to state 75
    declarar_variable              shift and go to state 77
    tipo_variable                  shift and go to state 17

state 42

    (20) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO . RPAREN
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 78
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 58

state 43

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE . RPAREN
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 79
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 59

state 44

    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 32

state 45

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 40

state 46

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 37

state 47

    (64) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (65) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    LPAREN          shift and go to state 80


state 48

    (50) declarar_variable -> tipo_variable VARIABLE . PUNTOCOMA
    (51) declarar_variable -> tipo_variable VARIABLE .

    PUNTOCOMA       shift and go to state 81
    ASIGNAR         reduce using rule 51 (declarar_variable -> tipo_variable VARIABLE .)
    $end            reduce using rule 51 (declarar_variable -> tipo_variable VARIABLE .)


state 49

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT . COMPARACION
    (33) COMPARACION -> . VARIABLE
    (34) COMPARACION -> . NUMERO
    (35) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 83
    NUMERO          shift and go to state 84
    BOOLEANO        shift and go to state 28

    COMPARACION                    shift and go to state 82

state 50

    (36) OPERATOR_COMP_MAT -> IGUALDADESTRICTA .

    VARIABLE        reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    NUMERO          reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    BOOLEANO        reduce using rule 36 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)


state 51

    (37) OPERATOR_COMP_MAT -> MAYORIGUAL .

    VARIABLE        reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    NUMERO          reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    BOOLEANO        reduce using rule 37 (OPERATOR_COMP_MAT -> MAYORIGUAL .)


state 52

    (38) OPERATOR_COMP_MAT -> MENORIGUAL .

    VARIABLE        reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    NUMERO          reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    BOOLEANO        reduce using rule 38 (OPERATOR_COMP_MAT -> MENORIGUAL .)


state 53

    (39) OPERATOR_COMP_MAT -> MENOR_QUE .

    VARIABLE        reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    NUMERO          reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    BOOLEANO        reduce using rule 39 (OPERATOR_COMP_MAT -> MENOR_QUE .)


state 54

    (40) OPERATOR_COMP_MAT -> MAYOR_QUE .

    VARIABLE        reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    NUMERO          reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    BOOLEANO        reduce using rule 40 (OPERATOR_COMP_MAT -> MAYOR_QUE .)


state 55

    (41) OPERATOR_COMP_MAT -> AND .

    VARIABLE        reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)
    NUMERO          reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)
    BOOLEANO        reduce using rule 41 (OPERATOR_COMP_MAT -> AND .)


state 56

    (42) OPERATOR_COMP_MAT -> OR .

    VARIABLE        reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)
    NUMERO          reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)
    BOOLEANO        reduce using rule 42 (OPERATOR_COMP_MAT -> OR .)


state 57

    (43) OPERATOR_COMP_MAT -> NOESIGUAL .

    VARIABLE        reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    NUMERO          reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    BOOLEANO        reduce using rule 43 (OPERATOR_COMP_MAT -> NOESIGUAL .)


state 58

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 86
    LPAREN          shift and go to state 87
    VARIABLE        shift and go to state 88

    EXPRESSION_MAT_NUMERO          shift and go to state 85

state 59

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 90
    LPAREN          shift and go to state 91
    VARIABLE        shift and go to state 92

    EXPRESSION_MAT_FLOTANTE        shift and go to state 89

state 60

    (46) asignar_variable -> declarar_variable ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 93


state 61

    (49) asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .

    $end            reduce using rule 49 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    VARIABLE        reduce using rule 49 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    NUMERO          reduce using rule 49 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)
    BOOLEANO        reduce using rule 49 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)


state 62

    (53) tipos_datos -> NUMERO .

    PUNTOCOMA       reduce using rule 53 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 53 (tipos_datos -> NUMERO .)
    $end            reduce using rule 53 (tipos_datos -> NUMERO .)
    VAR             reduce using rule 53 (tipos_datos -> NUMERO .)


state 63

    (55) tipos_datos -> FLOTANTE .

    PUNTOCOMA       reduce using rule 55 (tipos_datos -> FLOTANTE .)
    COMA            reduce using rule 55 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 55 (tipos_datos -> FLOTANTE .)
    VAR             reduce using rule 55 (tipos_datos -> FLOTANTE .)


state 64

    (57) iniciar_estructuras -> NEW . VARIABLE LPAREN RPAREN PUNTOCOMA

    VARIABLE        shift and go to state 94


state 65

    (21) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .

    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)


state 66

    (24) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 24 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)


state 67

    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)


state 68

    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 31 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)


state 69

    (45) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 45 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 70

    (47) asignar_variable -> VARIABLE ASIGNAR VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 95


state 71

    (48) asignar_variable -> VARIABLE ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 96


state 72

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICAR resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)

  ! MAS             [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MENOS           [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MULTIPLICAR     [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! $end            [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! RPAREN          [ reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]


state 73

    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .

    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)


state 74

    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)


state 75

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable . EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE
    (32) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (33) COMPARACION -> . VARIABLE
    (34) COMPARACION -> . NUMERO
    (35) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 83
    NUMERO          shift and go to state 84
    BOOLEANO        shift and go to state 28

    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 97
    COMPARACION                    shift and go to state 19

state 76

    (47) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (48) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA

    ASIGNAR         shift and go to state 39


state 77

    (46) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (49) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras

    ASIGNAR         shift and go to state 31


state 78

    (20) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .

    MAS             reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MENOS           reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MULTIPLICAR     reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    DIVIDIR         reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    $end            reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    RPAREN          reduce using rule 20 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)


state 79

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .

    MAS             reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MENOS           reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MULTIPLICAR     reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    DIVIDIR         reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    $end            reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)


state 80

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (66) MASPARAMETROS -> . PARAMETROS VAR
    (67) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (68) PARAMETROS -> . tipos_datos
    (69) PARAMETROS -> . VARIABLE
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 98
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    MASPARAMETROS                  shift and go to state 99
    PARAMETROS                     shift and go to state 100
    tipos_datos                    shift and go to state 101
    booleano_tipo                  shift and go to state 20

state 81

    (50) declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .

    ASIGNAR         reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)
    $end            reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)


state 82

    (32) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .

    $end            reduce using rule 32 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)
    PUNTOCOMA       reduce using rule 32 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)


state 83

    (33) COMPARACION -> VARIABLE .

    $end            reduce using rule 33 (COMPARACION -> VARIABLE .)
    PUNTOCOMA       reduce using rule 33 (COMPARACION -> VARIABLE .)
    IGUALDADESTRICTA reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 33 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 33 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 33 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 33 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 33 (COMPARACION -> VARIABLE .)


state 84

    (34) COMPARACION -> NUMERO .

    $end            reduce using rule 34 (COMPARACION -> NUMERO .)
    PUNTOCOMA       reduce using rule 34 (COMPARACION -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> NUMERO .)
    AND             reduce using rule 34 (COMPARACION -> NUMERO .)
    OR              reduce using rule 34 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> NUMERO .)


state 85

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    RPAREN          reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! MAS             [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MENOS           [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 58

state 86

    (19) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .
    (21) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! MAS             [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MENOS           [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 19 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 32

state 87

    (20) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (20) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (21) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (24) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 87
    NUMERO          shift and go to state 44
    VARIABLE        shift and go to state 88

    EXPRESSION_MAT_NUMERO          shift and go to state 42

state 88

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 102

state 89

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    RPAREN          reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! MAS             [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MENOS           [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 59

state 90

    (26) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .
    (27) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

  ! MAS             [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MENOS           [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 37

state 91

    (28) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (28) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (31) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 46
    LPAREN          shift and go to state 91
    VARIABLE        shift and go to state 92

    EXPRESSION_MAT_FLOTANTE        shift and go to state 43

state 92

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTIPLICAR     shift and go to state 35
    DIVIDIR         shift and go to state 36

    OPERATOR_MAT                   shift and go to state 103

state 93

    (46) asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 46 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    VARIABLE        reduce using rule 46 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    NUMERO          reduce using rule 46 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)
    BOOLEANO        reduce using rule 46 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)


state 94

    (57) iniciar_estructuras -> NEW VARIABLE . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 104


state 95

    (47) asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .

    $end            reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    VARIABLE        reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    NUMERO          reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)
    BOOLEANO        reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)


state 96

    (48) asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    VARIABLE        reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    NUMERO          reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)
    BOOLEANO        reduce using rule 48 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)


state 97

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA . PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    PUNTOCOMA       shift and go to state 105


state 98

    (69) PARAMETROS -> VARIABLE .

    VAR             reduce using rule 69 (PARAMETROS -> VARIABLE .)
    COMA            reduce using rule 69 (PARAMETROS -> VARIABLE .)


state 99

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE
    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    RPAREN          shift and go to state 106


state 100

    (66) MASPARAMETROS -> PARAMETROS . VAR
    (67) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    VAR             shift and go to state 107
    COMA            shift and go to state 108


state 101

    (68) PARAMETROS -> tipos_datos .

    VAR             reduce using rule 68 (PARAMETROS -> tipos_datos .)
    COMA            reduce using rule 68 (PARAMETROS -> tipos_datos .)


state 102

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (23) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO

    VARIABLE        shift and go to state 109
    NUMERO          shift and go to state 73


state 103

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (30) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 110
    FLOTANTE        shift and go to state 74


state 104

    (57) iniciar_estructuras -> NEW VARIABLE LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 111


state 105

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA . VARIABLE MAS MAS RPAREN ILLAVE DLLAVE

    VARIABLE        shift and go to state 112


state 106

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE
    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE RETURN MASPARAMETROS DLLAVE

    ILLAVE          shift and go to state 113


state 107

    (66) MASPARAMETROS -> PARAMETROS VAR .

    RPAREN          reduce using rule 66 (MASPARAMETROS -> PARAMETROS VAR .)
    DLLAVE          reduce using rule 66 (MASPARAMETROS -> PARAMETROS VAR .)


state 108

    (67) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (66) MASPARAMETROS -> . PARAMETROS VAR
    (67) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (68) PARAMETROS -> . tipos_datos
    (69) PARAMETROS -> . VARIABLE
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 98
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    PARAMETROS                     shift and go to state 100
    MASPARAMETROS                  shift and go to state 114
    tipos_datos                    shift and go to state 101
    booleano_tipo                  shift and go to state 20

state 109

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)


state 110

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)


state 111

    (57) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 115


state 112

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE . MAS MAS RPAREN ILLAVE DLLAVE

    MAS             shift and go to state 116


state 113

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE
    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . RETURN MASPARAMETROS DLLAVE

    DLLAVE          shift and go to state 117
    RETURN          shift and go to state 118


state 114

    (67) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 67 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)
    DLLAVE          reduce using rule 67 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 115

    (57) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 57 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    VARIABLE        reduce using rule 57 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    NUMERO          reduce using rule 57 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)
    BOOLEANO        reduce using rule 57 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)


state 116

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS . MAS RPAREN ILLAVE DLLAVE

    MAS             shift and go to state 119


state 117

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 64 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)


state 118

    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN . MASPARAMETROS DLLAVE
    (66) MASPARAMETROS -> . PARAMETROS VAR
    (67) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (68) PARAMETROS -> . tipos_datos
    (69) PARAMETROS -> . VARIABLE
    (52) tipos_datos -> . booleano_tipo
    (53) tipos_datos -> . NUMERO
    (54) tipos_datos -> . CADENA
    (55) tipos_datos -> . FLOTANTE
    (56) tipos_datos -> . NULL
    (61) booleano_tipo -> . TRUE
    (62) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 98
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 21
    FLOTANTE        shift and go to state 63
    NULL            shift and go to state 22
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    MASPARAMETROS                  shift and go to state 120
    PARAMETROS                     shift and go to state 100
    tipos_datos                    shift and go to state 101
    booleano_tipo                  shift and go to state 20

state 119

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS . RPAREN ILLAVE DLLAVE

    RPAREN          shift and go to state 121


state 120

    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS . DLLAVE

    DLLAVE          shift and go to state 122


state 121

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN . ILLAVE DLLAVE

    ILLAVE          shift and go to state 123


state 122

    (65) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .

    $end            reduce using rule 65 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .)


state 123

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE . DLLAVE

    DLLAVE          shift and go to state 124


state 124

    (70) ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 70 (ESTRUCTURA_FOR -> FOR LPAREN asignar_variable EXPRESSION_CONDICION_BOOLEANA PUNTOCOMA VARIABLE MAS MAS RPAREN ILLAVE DLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 85 resolved as shift
WARNING: shift/reduce conflict for MAS in state 86 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 86 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 86 resolved as shift
WARNING: shift/reduce conflict for MAS in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 89 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 89 resolved as shift
WARNING: shift/reduce conflict for MAS in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 90 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 90 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> NUMERO)
WARNING: rejected rule (tipos_datos -> NUMERO) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (EXPRESSION -> FLOTANTE)
WARNING: rejected rule (tipos_datos -> FLOTANTE) in state 9
WARNING: reduce/reduce conflict in state 72 resolved using rule (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE)
WARNING: rejected rule (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE) in state 72
