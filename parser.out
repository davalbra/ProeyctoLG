Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARGUMENTS
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COMENTARIO
    CONTINUE
    DCORCHETE
    DEBUGGER
    DEFAULT
    DELETE
    DIVISIONIGUAL
    DO
    DOSPUNTOS
    ELSE
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FOR
    ICORCHETE
    IF
    IMPLEMENTS
    IN
    INSTANCEOF
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    METODO_ADD_SET
    METODO_HAS
    METODO_POP_ARRAY
    METODO_PUSH_ARRAY
    METODO_SET
    METODO_SIZE_SET
    MODULO
    NEGACION
    PACKAGE
    PORIGUAL
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    VOID
    WHILE
    WITH
    YIELD

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     OPERATOR_MAT -> MAS
Rule 3     OPERATOR_MAT -> MENOS
Rule 4     OPERATOR_MAT -> MULTIPLICAR
Rule 5     OPERATOR_MAT -> DIVIDIR
Rule 6     EXPRESSION -> asignar_variable
Rule 7     EXPRESSION -> grupo_datos
Rule 8     EXPRESSION -> FUNCTIONS
Rule 9     EXPRESSION -> declarar_variable
Rule 10    EXPRESSION -> NUMERO
Rule 11    EXPRESSION -> FLOTANTE
Rule 12    EXPRESSION -> EXPRESSION_MAT
Rule 13    EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA
Rule 14    EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS
Rule 15    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO
Rule 16    EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE
Rule 17    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
Rule 18    EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
Rule 19    EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN
Rule 20    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO
Rule 21    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE
Rule 22    EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO
Rule 23    EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE
Rule 24    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
Rule 25    EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
Rule 26    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE
Rule 27    EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
Rule 28    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE
Rule 29    EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE
Rule 30    EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE
Rule 31    EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION
Rule 32    COMPARACION -> VARIABLE
Rule 33    COMPARACION -> NUMERO
Rule 34    COMPARACION -> BOOLEANO
Rule 35    OPERATOR_COMP_MAT -> IGUALDADESTRICTA
Rule 36    OPERATOR_COMP_MAT -> MAYORIGUAL
Rule 37    OPERATOR_COMP_MAT -> MENORIGUAL
Rule 38    OPERATOR_COMP_MAT -> MENOR_QUE
Rule 39    OPERATOR_COMP_MAT -> MAYOR_QUE
Rule 40    OPERATOR_COMP_MAT -> AND
Rule 41    OPERATOR_COMP_MAT -> OR
Rule 42    OPERATOR_COMP_MAT -> NOESIGUAL
Rule 43    grupo_datos -> tipos_datos
Rule 44    grupo_datos -> tipos_datos COMA grupo_datos
Rule 45    asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA
Rule 46    asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA
Rule 47    asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA
Rule 48    asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras
Rule 49    declarar_variable -> tipo_variable VARIABLE PUNTOCOMA
Rule 50    declarar_variable -> tipo_variable VARIABLE
Rule 51    tipos_datos -> booleano_tipo
Rule 52    tipos_datos -> NUMERO
Rule 53    tipos_datos -> CADENA
Rule 54    tipos_datos -> FLOTANTE
Rule 55    tipos_datos -> NULL
Rule 56    iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA
Rule 57    tipo_variable -> VAR
Rule 58    tipo_variable -> LET
Rule 59    tipo_variable -> CONST
Rule 60    booleano_tipo -> TRUE
Rule 61    booleano_tipo -> FALSE
Rule 62    cadenas_caracteres -> CADENA
Rule 63    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
Rule 64    FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
Rule 65    MASPARAMETROS -> PARAMETROS
Rule 66    MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS
Rule 67    PARAMETROS -> tipos_datos
Rule 68    PARAMETROS -> VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 40
ARGUMENTS            : 
ASIGNAR              : 45 46 47 48
AWAIT                : 
BOOLEANO             : 34
BREAK                : 
CADENA               : 53 62
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 44 66
COMENTARIO           : 
CONST                : 59
CONTINUE             : 
DCORCHETE            : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDIR              : 5
DIVISIONIGUAL        : 
DLLAVE               : 63 64
DO                   : 
DOSPUNTOS            : 
ELSE                 : 
ENUM                 : 
EXPORT               : 
EXTENDS              : 
FALSE                : 61
FINALLY              : 
FLOTANTE             : 11 25 26 26 29 30 54
FOR                  : 
FUNCTION             : 63 64
ICORCHETE            : 
IF                   : 
IGUALDADESTRICTA     : 35
ILLAVE               : 63 64
IMPLEMENTS           : 
IN                   : 
INSTANCEOF           : 
INTERFACE            : 
LET                  : 58
LPAREN               : 19 27 56 63 64
MAS                  : 2
MASIGUAL             : 
MAYORIGUAL           : 36
MAYOR_QUE            : 39
MENORIGUAL           : 37
MENOR_QUE            : 38
MENOS                : 3
MENOSIGUAL           : 
METODO_ADD_SET       : 
METODO_HAS           : 
METODO_POP_ARRAY     : 
METODO_PUSH_ARRAY    : 
METODO_SET           : 
METODO_SIZE_SET      : 
MODULO               : 
MULTIPLICAR          : 4
NEGACION             : 
NEW                  : 56
NOESIGUAL            : 42
NULL                 : 55
NUMERO               : 10 18 20 20 22 23 33 52
OR                   : 41
PACKAGE              : 
PORIGUAL             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOCOMA            : 45 46 47 49 56
RETURN               : 64
RPAREN               : 19 27 56 63 64
STATIC               : 
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRUE                 : 60
TRY                  : 
TYPEOF               : 
VAR                  : 57
VARIABLE             : 21 21 22 23 28 28 29 30 32 46 46 47 49 50 56 63 64 68
VOID                 : 
WHILE                : 
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMPARACION          : 31 31
EXPRESSION           : 1
EXPRESSION_CONDICION_BOOLEANA : 13
EXPRESSION_MAT       : 12
EXPRESSION_MAT_FLOTANTE : 16 24 24 25 27
EXPRESSION_MAT_NUMERO : 15 17 17 18 19
EXPRESSION_MAT_OPTIONS : 14
FUNCTIONS            : 8
MASPARAMETROS        : 63 64 64 66
OPERATOR_COMP_MAT    : 31
OPERATOR_MAT         : 17 18 20 21 22 23 24 25 26 28 29 30
PARAMETROS           : 65 66
STATEMENT            : 0
asignar_variable     : 6
booleano_tipo        : 51
cadenas_caracteres   : 
declarar_variable    : 9 45 48
grupo_datos          : 7 44
iniciar_estructuras  : 48
tipo_variable        : 49 50
tipos_datos          : 43 44 45 47 67

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (6) EXPRESSION -> . asignar_variable
    (7) EXPRESSION -> . grupo_datos
    (8) EXPRESSION -> . FUNCTIONS
    (9) EXPRESSION -> . declarar_variable
    (10) EXPRESSION -> . NUMERO
    (11) EXPRESSION -> . FLOTANTE
    (12) EXPRESSION -> . EXPRESSION_MAT
    (13) EXPRESSION -> . EXPRESSION_CONDICION_BOOLEANA
    (45) asignar_variable -> . declarar_variable ASIGNAR tipos_datos PUNTOCOMA
    (46) asignar_variable -> . VARIABLE ASIGNAR VARIABLE PUNTOCOMA
    (47) asignar_variable -> . VARIABLE ASIGNAR tipos_datos PUNTOCOMA
    (48) asignar_variable -> . declarar_variable ASIGNAR iniciar_estructuras
    (43) grupo_datos -> . tipos_datos
    (44) grupo_datos -> . tipos_datos COMA grupo_datos
    (63) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (64) FUNCTIONS -> . FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (49) declarar_variable -> . tipo_variable VARIABLE PUNTOCOMA
    (50) declarar_variable -> . tipo_variable VARIABLE
    (14) EXPRESSION_MAT -> . EXPRESSION_MAT_OPTIONS
    (31) EXPRESSION_CONDICION_BOOLEANA -> . COMPARACION OPERATOR_COMP_MAT COMPARACION
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (57) tipo_variable -> . VAR
    (58) tipo_variable -> . LET
    (59) tipo_variable -> . CONST
    (15) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_NUMERO
    (16) EXPRESSION_MAT_OPTIONS -> . EXPRESSION_MAT_FLOTANTE
    (32) COMPARACION -> . VARIABLE
    (33) COMPARACION -> . NUMERO
    (34) COMPARACION -> . BOOLEANO
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 7
    FLOTANTE        shift and go to state 8
    VARIABLE        shift and go to state 12
    FUNCTION        shift and go to state 13
    CADENA          shift and go to state 19
    NULL            shift and go to state 20
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    BOOLEANO        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LPAREN          shift and go to state 14

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    asignar_variable               shift and go to state 3
    grupo_datos                    shift and go to state 4
    FUNCTIONS                      shift and go to state 5
    declarar_variable              shift and go to state 6
    EXPRESSION_MAT                 shift and go to state 9
    EXPRESSION_CONDICION_BOOLEANA  shift and go to state 10
    tipos_datos                    shift and go to state 11
    tipo_variable                  shift and go to state 15
    EXPRESSION_MAT_OPTIONS         shift and go to state 16
    COMPARACION                    shift and go to state 17
    booleano_tipo                  shift and go to state 18
    EXPRESSION_MAT_NUMERO          shift and go to state 24
    EXPRESSION_MAT_FLOTANTE        shift and go to state 25

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (6) EXPRESSION -> asignar_variable .

    $end            reduce using rule 6 (EXPRESSION -> asignar_variable .)


state 4

    (7) EXPRESSION -> grupo_datos .

    $end            reduce using rule 7 (EXPRESSION -> grupo_datos .)


state 5

    (8) EXPRESSION -> FUNCTIONS .

    $end            reduce using rule 8 (EXPRESSION -> FUNCTIONS .)


state 6

    (9) EXPRESSION -> declarar_variable .
    (45) asignar_variable -> declarar_variable . ASIGNAR tipos_datos PUNTOCOMA
    (48) asignar_variable -> declarar_variable . ASIGNAR iniciar_estructuras

    $end            reduce using rule 9 (EXPRESSION -> declarar_variable .)
    ASIGNAR         shift and go to state 29


state 7

    (10) EXPRESSION -> NUMERO .
    (52) tipos_datos -> NUMERO .
    (33) COMPARACION -> NUMERO .
    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> NUMERO .)
    $end            reduce using rule 10 (EXPRESSION -> NUMERO .)
    COMA            reduce using rule 52 (tipos_datos -> NUMERO .)
    IGUALDADESTRICTA reduce using rule 33 (COMPARACION -> NUMERO .)
    MAYORIGUAL      reduce using rule 33 (COMPARACION -> NUMERO .)
    MENORIGUAL      reduce using rule 33 (COMPARACION -> NUMERO .)
    MENOR_QUE       reduce using rule 33 (COMPARACION -> NUMERO .)
    MAYOR_QUE       reduce using rule 33 (COMPARACION -> NUMERO .)
    AND             reduce using rule 33 (COMPARACION -> NUMERO .)
    OR              reduce using rule 33 (COMPARACION -> NUMERO .)
    NOESIGUAL       reduce using rule 33 (COMPARACION -> NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! $end            [ reduce using rule 52 (tipos_datos -> NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 30

state 8

    (11) EXPRESSION -> FLOTANTE .
    (54) tipos_datos -> FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> FLOTANTE .)
    $end            reduce using rule 11 (EXPRESSION -> FLOTANTE .)
    COMA            reduce using rule 54 (tipos_datos -> FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! $end            [ reduce using rule 54 (tipos_datos -> FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 35

state 9

    (12) EXPRESSION -> EXPRESSION_MAT .

    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION_MAT .)


state 10

    (13) EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_CONDICION_BOOLEANA .)


state 11

    (43) grupo_datos -> tipos_datos .
    (44) grupo_datos -> tipos_datos . COMA grupo_datos

    $end            reduce using rule 43 (grupo_datos -> tipos_datos .)
    COMA            shift and go to state 36


state 12

    (46) asignar_variable -> VARIABLE . ASIGNAR VARIABLE PUNTOCOMA
    (47) asignar_variable -> VARIABLE . ASIGNAR tipos_datos PUNTOCOMA
    (32) COMPARACION -> VARIABLE .
    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    ASIGNAR         shift and go to state 37
    IGUALDADESTRICTA reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAYORIGUAL      reduce using rule 32 (COMPARACION -> VARIABLE .)
    MENORIGUAL      reduce using rule 32 (COMPARACION -> VARIABLE .)
    MENOR_QUE       reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAYOR_QUE       reduce using rule 32 (COMPARACION -> VARIABLE .)
    AND             reduce using rule 32 (COMPARACION -> VARIABLE .)
    OR              reduce using rule 32 (COMPARACION -> VARIABLE .)
    NOESIGUAL       reduce using rule 32 (COMPARACION -> VARIABLE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 38

state 13

    (63) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (64) FUNCTIONS -> FUNCTION . VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    VARIABLE        shift and go to state 39


state 14

    (19) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 14
    NUMERO          shift and go to state 42
    VARIABLE        shift and go to state 43
    FLOTANTE        shift and go to state 44

    EXPRESSION_MAT_NUMERO          shift and go to state 40
    EXPRESSION_MAT_FLOTANTE        shift and go to state 41

state 15

    (49) declarar_variable -> tipo_variable . VARIABLE PUNTOCOMA
    (50) declarar_variable -> tipo_variable . VARIABLE

    VARIABLE        shift and go to state 45


state 16

    (14) EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .

    $end            reduce using rule 14 (EXPRESSION_MAT -> EXPRESSION_MAT_OPTIONS .)


state 17

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION . OPERATOR_COMP_MAT COMPARACION
    (35) OPERATOR_COMP_MAT -> . IGUALDADESTRICTA
    (36) OPERATOR_COMP_MAT -> . MAYORIGUAL
    (37) OPERATOR_COMP_MAT -> . MENORIGUAL
    (38) OPERATOR_COMP_MAT -> . MENOR_QUE
    (39) OPERATOR_COMP_MAT -> . MAYOR_QUE
    (40) OPERATOR_COMP_MAT -> . AND
    (41) OPERATOR_COMP_MAT -> . OR
    (42) OPERATOR_COMP_MAT -> . NOESIGUAL

    IGUALDADESTRICTA shift and go to state 47
    MAYORIGUAL      shift and go to state 48
    MENORIGUAL      shift and go to state 49
    MENOR_QUE       shift and go to state 50
    MAYOR_QUE       shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53
    NOESIGUAL       shift and go to state 54

    OPERATOR_COMP_MAT              shift and go to state 46

state 18

    (51) tipos_datos -> booleano_tipo .

    COMA            reduce using rule 51 (tipos_datos -> booleano_tipo .)
    $end            reduce using rule 51 (tipos_datos -> booleano_tipo .)
    PUNTOCOMA       reduce using rule 51 (tipos_datos -> booleano_tipo .)
    RPAREN          reduce using rule 51 (tipos_datos -> booleano_tipo .)
    DLLAVE          reduce using rule 51 (tipos_datos -> booleano_tipo .)


state 19

    (53) tipos_datos -> CADENA .

    COMA            reduce using rule 53 (tipos_datos -> CADENA .)
    $end            reduce using rule 53 (tipos_datos -> CADENA .)
    PUNTOCOMA       reduce using rule 53 (tipos_datos -> CADENA .)
    RPAREN          reduce using rule 53 (tipos_datos -> CADENA .)
    DLLAVE          reduce using rule 53 (tipos_datos -> CADENA .)


state 20

    (55) tipos_datos -> NULL .

    COMA            reduce using rule 55 (tipos_datos -> NULL .)
    $end            reduce using rule 55 (tipos_datos -> NULL .)
    PUNTOCOMA       reduce using rule 55 (tipos_datos -> NULL .)
    RPAREN          reduce using rule 55 (tipos_datos -> NULL .)
    DLLAVE          reduce using rule 55 (tipos_datos -> NULL .)


state 21

    (57) tipo_variable -> VAR .

    VARIABLE        reduce using rule 57 (tipo_variable -> VAR .)


state 22

    (58) tipo_variable -> LET .

    VARIABLE        reduce using rule 58 (tipo_variable -> LET .)


state 23

    (59) tipo_variable -> CONST .

    VARIABLE        reduce using rule 59 (tipo_variable -> CONST .)


state 24

    (15) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 15 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 55

state 25

    (16) EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    $end            reduce using rule 16 (EXPRESSION_MAT_OPTIONS -> EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 56

state 26

    (34) COMPARACION -> BOOLEANO .

    IGUALDADESTRICTA reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MENORIGUAL      reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MENOR_QUE       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    MAYOR_QUE       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    AND             reduce using rule 34 (COMPARACION -> BOOLEANO .)
    OR              reduce using rule 34 (COMPARACION -> BOOLEANO .)
    NOESIGUAL       reduce using rule 34 (COMPARACION -> BOOLEANO .)
    $end            reduce using rule 34 (COMPARACION -> BOOLEANO .)


state 27

    (60) booleano_tipo -> TRUE .

    COMA            reduce using rule 60 (booleano_tipo -> TRUE .)
    $end            reduce using rule 60 (booleano_tipo -> TRUE .)
    PUNTOCOMA       reduce using rule 60 (booleano_tipo -> TRUE .)
    RPAREN          reduce using rule 60 (booleano_tipo -> TRUE .)
    DLLAVE          reduce using rule 60 (booleano_tipo -> TRUE .)


state 28

    (61) booleano_tipo -> FALSE .

    COMA            reduce using rule 61 (booleano_tipo -> FALSE .)
    $end            reduce using rule 61 (booleano_tipo -> FALSE .)
    PUNTOCOMA       reduce using rule 61 (booleano_tipo -> FALSE .)
    RPAREN          reduce using rule 61 (booleano_tipo -> FALSE .)
    DLLAVE          reduce using rule 61 (booleano_tipo -> FALSE .)


state 29

    (45) asignar_variable -> declarar_variable ASIGNAR . tipos_datos PUNTOCOMA
    (48) asignar_variable -> declarar_variable ASIGNAR . iniciar_estructuras
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (56) iniciar_estructuras -> . NEW VARIABLE LPAREN RPAREN PUNTOCOMA
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    NEW             shift and go to state 61
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 57
    iniciar_estructuras            shift and go to state 58
    booleano_tipo                  shift and go to state 18

state 30

    (20) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT . VARIABLE

    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 63


state 31

    (2) OPERATOR_MAT -> MAS .

    NUMERO          reduce using rule 2 (OPERATOR_MAT -> MAS .)
    VARIABLE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    FLOTANTE        reduce using rule 2 (OPERATOR_MAT -> MAS .)
    LPAREN          reduce using rule 2 (OPERATOR_MAT -> MAS .)


state 32

    (3) OPERATOR_MAT -> MENOS .

    NUMERO          reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    VARIABLE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    FLOTANTE        reduce using rule 3 (OPERATOR_MAT -> MENOS .)
    LPAREN          reduce using rule 3 (OPERATOR_MAT -> MENOS .)


state 33

    (4) OPERATOR_MAT -> MULTIPLICAR .

    NUMERO          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    VARIABLE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)
    LPAREN          reduce using rule 4 (OPERATOR_MAT -> MULTIPLICAR .)


state 34

    (5) OPERATOR_MAT -> DIVIDIR .

    NUMERO          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    VARIABLE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    FLOTANTE        reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)
    LPAREN          reduce using rule 5 (OPERATOR_MAT -> DIVIDIR .)


state 35

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT . VARIABLE

    FLOTANTE        shift and go to state 64
    VARIABLE        shift and go to state 65


state 36

    (44) grupo_datos -> tipos_datos COMA . grupo_datos
    (43) grupo_datos -> . tipos_datos
    (44) grupo_datos -> . tipos_datos COMA grupo_datos
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 11
    grupo_datos                    shift and go to state 66
    booleano_tipo                  shift and go to state 18

state 37

    (46) asignar_variable -> VARIABLE ASIGNAR . VARIABLE PUNTOCOMA
    (47) asignar_variable -> VARIABLE ASIGNAR . tipos_datos PUNTOCOMA
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 67
    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    tipos_datos                    shift and go to state 68
    booleano_tipo                  shift and go to state 18

state 38

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 69
    NUMERO          shift and go to state 70
    FLOTANTE        shift and go to state 71


state 39

    (63) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE
    (64) FUNCTIONS -> FUNCTION VARIABLE . LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    LPAREN          shift and go to state 72


state 40

    (19) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO . RPAREN
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 73
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 55

state 41

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE . RPAREN
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    RPAREN          shift and go to state 74
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 56

state 42

    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 30

state 43

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 38

state 44

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 35

state 45

    (49) declarar_variable -> tipo_variable VARIABLE . PUNTOCOMA
    (50) declarar_variable -> tipo_variable VARIABLE .

    PUNTOCOMA       shift and go to state 75
    ASIGNAR         reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE .)
    $end            reduce using rule 50 (declarar_variable -> tipo_variable VARIABLE .)


state 46

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT . COMPARACION
    (32) COMPARACION -> . VARIABLE
    (33) COMPARACION -> . NUMERO
    (34) COMPARACION -> . BOOLEANO

    VARIABLE        shift and go to state 77
    NUMERO          shift and go to state 78
    BOOLEANO        shift and go to state 26

    COMPARACION                    shift and go to state 76

state 47

    (35) OPERATOR_COMP_MAT -> IGUALDADESTRICTA .

    VARIABLE        reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    NUMERO          reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)
    BOOLEANO        reduce using rule 35 (OPERATOR_COMP_MAT -> IGUALDADESTRICTA .)


state 48

    (36) OPERATOR_COMP_MAT -> MAYORIGUAL .

    VARIABLE        reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    NUMERO          reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)
    BOOLEANO        reduce using rule 36 (OPERATOR_COMP_MAT -> MAYORIGUAL .)


state 49

    (37) OPERATOR_COMP_MAT -> MENORIGUAL .

    VARIABLE        reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    NUMERO          reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)
    BOOLEANO        reduce using rule 37 (OPERATOR_COMP_MAT -> MENORIGUAL .)


state 50

    (38) OPERATOR_COMP_MAT -> MENOR_QUE .

    VARIABLE        reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    NUMERO          reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)
    BOOLEANO        reduce using rule 38 (OPERATOR_COMP_MAT -> MENOR_QUE .)


state 51

    (39) OPERATOR_COMP_MAT -> MAYOR_QUE .

    VARIABLE        reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    NUMERO          reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)
    BOOLEANO        reduce using rule 39 (OPERATOR_COMP_MAT -> MAYOR_QUE .)


state 52

    (40) OPERATOR_COMP_MAT -> AND .

    VARIABLE        reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)
    NUMERO          reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)
    BOOLEANO        reduce using rule 40 (OPERATOR_COMP_MAT -> AND .)


state 53

    (41) OPERATOR_COMP_MAT -> OR .

    VARIABLE        reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)
    NUMERO          reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)
    BOOLEANO        reduce using rule 41 (OPERATOR_COMP_MAT -> OR .)


state 54

    (42) OPERATOR_COMP_MAT -> NOESIGUAL .

    VARIABLE        reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    NUMERO          reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)
    BOOLEANO        reduce using rule 42 (OPERATOR_COMP_MAT -> NOESIGUAL .)


state 55

    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT . NUMERO
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    NUMERO          shift and go to state 80
    LPAREN          shift and go to state 81
    VARIABLE        shift and go to state 82

    EXPRESSION_MAT_NUMERO          shift and go to state 79

state 56

    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT . FLOTANTE
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 84
    LPAREN          shift and go to state 85
    VARIABLE        shift and go to state 86

    EXPRESSION_MAT_FLOTANTE        shift and go to state 83

state 57

    (45) asignar_variable -> declarar_variable ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 87


state 58

    (48) asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .

    $end            reduce using rule 48 (asignar_variable -> declarar_variable ASIGNAR iniciar_estructuras .)


state 59

    (52) tipos_datos -> NUMERO .

    PUNTOCOMA       reduce using rule 52 (tipos_datos -> NUMERO .)
    COMA            reduce using rule 52 (tipos_datos -> NUMERO .)
    $end            reduce using rule 52 (tipos_datos -> NUMERO .)
    RPAREN          reduce using rule 52 (tipos_datos -> NUMERO .)
    DLLAVE          reduce using rule 52 (tipos_datos -> NUMERO .)


state 60

    (54) tipos_datos -> FLOTANTE .

    PUNTOCOMA       reduce using rule 54 (tipos_datos -> FLOTANTE .)
    COMA            reduce using rule 54 (tipos_datos -> FLOTANTE .)
    $end            reduce using rule 54 (tipos_datos -> FLOTANTE .)
    RPAREN          reduce using rule 54 (tipos_datos -> FLOTANTE .)
    DLLAVE          reduce using rule 54 (tipos_datos -> FLOTANTE .)


state 61

    (56) iniciar_estructuras -> NEW . VARIABLE LPAREN RPAREN PUNTOCOMA

    VARIABLE        shift and go to state 88


state 62

    (20) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .

    MAS             reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    $end            reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 20 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT NUMERO .)


state 63

    (23) EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 23 (EXPRESSION_MAT_NUMERO -> NUMERO OPERATOR_MAT VARIABLE .)


state 64

    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT FLOTANTE .)


state 65

    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 30 (EXPRESSION_MAT_FLOTANTE -> FLOTANTE OPERATOR_MAT VARIABLE .)


state 66

    (44) grupo_datos -> tipos_datos COMA grupo_datos .

    $end            reduce using rule 44 (grupo_datos -> tipos_datos COMA grupo_datos .)


state 67

    (46) asignar_variable -> VARIABLE ASIGNAR VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 89


state 68

    (47) asignar_variable -> VARIABLE ASIGNAR tipos_datos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 90


state 69

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .
    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICAR resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)

  ! MAS             [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MENOS           [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! MULTIPLICAR     [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! $end            [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]
  ! RPAREN          [ reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .) ]


state 70

    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .

    MAS             reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MENOS           reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    MULTIPLICAR     reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    DIVIDIR         reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    $end            reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 22 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT NUMERO .)


state 71

    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .

    MAS             reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MENOS           reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    MULTIPLICAR     reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    DIVIDIR         reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    $end            reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT FLOTANTE .)


state 72

    (63) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE DLLAVE
    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN . MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE
    (65) MASPARAMETROS -> . PARAMETROS
    (66) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (67) PARAMETROS -> . tipos_datos
    (68) PARAMETROS -> . VARIABLE
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 91
    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    MASPARAMETROS                  shift and go to state 92
    PARAMETROS                     shift and go to state 93
    tipos_datos                    shift and go to state 94
    booleano_tipo                  shift and go to state 18

state 73

    (19) EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .

    MAS             reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MENOS           reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    MULTIPLICAR     reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    DIVIDIR         reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    $end            reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)
    RPAREN          reduce using rule 19 (EXPRESSION_MAT_NUMERO -> LPAREN EXPRESSION_MAT_NUMERO RPAREN .)


state 74

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .

    MAS             reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MENOS           reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    MULTIPLICAR     reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    DIVIDIR         reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    $end            reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT_FLOTANTE -> LPAREN EXPRESSION_MAT_FLOTANTE RPAREN .)


state 75

    (49) declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .

    ASIGNAR         reduce using rule 49 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)
    $end            reduce using rule 49 (declarar_variable -> tipo_variable VARIABLE PUNTOCOMA .)


state 76

    (31) EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .

    $end            reduce using rule 31 (EXPRESSION_CONDICION_BOOLEANA -> COMPARACION OPERATOR_COMP_MAT COMPARACION .)


state 77

    (32) COMPARACION -> VARIABLE .

    $end            reduce using rule 32 (COMPARACION -> VARIABLE .)


state 78

    (33) COMPARACION -> NUMERO .

    $end            reduce using rule 33 (COMPARACION -> NUMERO .)


state 79

    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .
    (17) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    RPAREN          reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MENOS           [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 17 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 55

state 80

    (18) EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .
    (20) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> NUMERO . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    RPAREN          reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MENOS           [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! MULTIPLICAR     [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 18 (EXPRESSION_MAT_NUMERO -> EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO .) ]

    OPERATOR_MAT                   shift and go to state 30

state 81

    (19) EXPRESSION_MAT_NUMERO -> LPAREN . EXPRESSION_MAT_NUMERO RPAREN
    (17) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT EXPRESSION_MAT_NUMERO
    (18) EXPRESSION_MAT_NUMERO -> . EXPRESSION_MAT_NUMERO OPERATOR_MAT NUMERO
    (19) EXPRESSION_MAT_NUMERO -> . LPAREN EXPRESSION_MAT_NUMERO RPAREN
    (20) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT NUMERO
    (21) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> . VARIABLE OPERATOR_MAT NUMERO
    (23) EXPRESSION_MAT_NUMERO -> . NUMERO OPERATOR_MAT VARIABLE

    LPAREN          shift and go to state 81
    NUMERO          shift and go to state 42
    VARIABLE        shift and go to state 82

    EXPRESSION_MAT_NUMERO          shift and go to state 40

state 82

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE . OPERATOR_MAT NUMERO
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 95

state 83

    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .
    (24) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    RPAREN          reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MENOS           [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 24 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 56

state 84

    (25) EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .
    (26) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> FLOTANTE . OPERATOR_MAT VARIABLE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    $end            reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    RPAREN          reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

  ! MAS             [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MENOS           [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! MULTIPLICAR     [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 25 (EXPRESSION_MAT_FLOTANTE -> EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE .) ]

    OPERATOR_MAT                   shift and go to state 35

state 85

    (27) EXPRESSION_MAT_FLOTANTE -> LPAREN . EXPRESSION_MAT_FLOTANTE RPAREN
    (24) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT EXPRESSION_MAT_FLOTANTE
    (25) EXPRESSION_MAT_FLOTANTE -> . EXPRESSION_MAT_FLOTANTE OPERATOR_MAT FLOTANTE
    (26) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT FLOTANTE
    (27) EXPRESSION_MAT_FLOTANTE -> . LPAREN EXPRESSION_MAT_FLOTANTE RPAREN
    (28) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> . VARIABLE OPERATOR_MAT FLOTANTE
    (30) EXPRESSION_MAT_FLOTANTE -> . FLOTANTE OPERATOR_MAT VARIABLE

    FLOTANTE        shift and go to state 44
    LPAREN          shift and go to state 85
    VARIABLE        shift and go to state 86

    EXPRESSION_MAT_FLOTANTE        shift and go to state 41

state 86

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE . OPERATOR_MAT FLOTANTE
    (2) OPERATOR_MAT -> . MAS
    (3) OPERATOR_MAT -> . MENOS
    (4) OPERATOR_MAT -> . MULTIPLICAR
    (5) OPERATOR_MAT -> . DIVIDIR

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MULTIPLICAR     shift and go to state 33
    DIVIDIR         shift and go to state 34

    OPERATOR_MAT                   shift and go to state 96

state 87

    (45) asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 45 (asignar_variable -> declarar_variable ASIGNAR tipos_datos PUNTOCOMA .)


state 88

    (56) iniciar_estructuras -> NEW VARIABLE . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 97


state 89

    (46) asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .

    $end            reduce using rule 46 (asignar_variable -> VARIABLE ASIGNAR VARIABLE PUNTOCOMA .)


state 90

    (47) asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .

    $end            reduce using rule 47 (asignar_variable -> VARIABLE ASIGNAR tipos_datos PUNTOCOMA .)


state 91

    (68) PARAMETROS -> VARIABLE .

    COMA            reduce using rule 68 (PARAMETROS -> VARIABLE .)
    RPAREN          reduce using rule 68 (PARAMETROS -> VARIABLE .)
    DLLAVE          reduce using rule 68 (PARAMETROS -> VARIABLE .)


state 92

    (63) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE DLLAVE
    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS . RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE

    RPAREN          shift and go to state 98


state 93

    (65) MASPARAMETROS -> PARAMETROS .
    (66) MASPARAMETROS -> PARAMETROS . COMA MASPARAMETROS

    RPAREN          reduce using rule 65 (MASPARAMETROS -> PARAMETROS .)
    DLLAVE          reduce using rule 65 (MASPARAMETROS -> PARAMETROS .)
    COMA            shift and go to state 99


state 94

    (67) PARAMETROS -> tipos_datos .

    COMA            reduce using rule 67 (PARAMETROS -> tipos_datos .)
    RPAREN          reduce using rule 67 (PARAMETROS -> tipos_datos .)
    DLLAVE          reduce using rule 67 (PARAMETROS -> tipos_datos .)


state 95

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . VARIABLE
    (22) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT . NUMERO

    VARIABLE        shift and go to state 100
    NUMERO          shift and go to state 70


state 96

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . VARIABLE
    (29) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT . FLOTANTE

    VARIABLE        shift and go to state 101
    FLOTANTE        shift and go to state 71


state 97

    (56) iniciar_estructuras -> NEW VARIABLE LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 102


state 98

    (63) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE DLLAVE
    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN . ILLAVE RETURN MASPARAMETROS DLLAVE

    ILLAVE          shift and go to state 103


state 99

    (66) MASPARAMETROS -> PARAMETROS COMA . MASPARAMETROS
    (65) MASPARAMETROS -> . PARAMETROS
    (66) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (67) PARAMETROS -> . tipos_datos
    (68) PARAMETROS -> . VARIABLE
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 91
    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    PARAMETROS                     shift and go to state 93
    MASPARAMETROS                  shift and go to state 104
    tipos_datos                    shift and go to state 94
    booleano_tipo                  shift and go to state 18

state 100

    (21) EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 21 (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE .)


state 101

    (28) EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .

    MAS             reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MENOS           reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    MULTIPLICAR     reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    DIVIDIR         reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    $end            reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE .)


state 102

    (56) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 105


state 103

    (63) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . DLLAVE
    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE . RETURN MASPARAMETROS DLLAVE

    DLLAVE          shift and go to state 106
    RETURN          shift and go to state 107


state 104

    (66) MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .

    RPAREN          reduce using rule 66 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)
    DLLAVE          reduce using rule 66 (MASPARAMETROS -> PARAMETROS COMA MASPARAMETROS .)


state 105

    (56) iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .

    $end            reduce using rule 56 (iniciar_estructuras -> NEW VARIABLE LPAREN RPAREN PUNTOCOMA .)


state 106

    (63) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .

    $end            reduce using rule 63 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE DLLAVE .)


state 107

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN . MASPARAMETROS DLLAVE
    (65) MASPARAMETROS -> . PARAMETROS
    (66) MASPARAMETROS -> . PARAMETROS COMA MASPARAMETROS
    (67) PARAMETROS -> . tipos_datos
    (68) PARAMETROS -> . VARIABLE
    (51) tipos_datos -> . booleano_tipo
    (52) tipos_datos -> . NUMERO
    (53) tipos_datos -> . CADENA
    (54) tipos_datos -> . FLOTANTE
    (55) tipos_datos -> . NULL
    (60) booleano_tipo -> . TRUE
    (61) booleano_tipo -> . FALSE

    VARIABLE        shift and go to state 91
    NUMERO          shift and go to state 59
    CADENA          shift and go to state 19
    FLOTANTE        shift and go to state 60
    NULL            shift and go to state 20
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    MASPARAMETROS                  shift and go to state 108
    PARAMETROS                     shift and go to state 93
    tipos_datos                    shift and go to state 94
    booleano_tipo                  shift and go to state 18

state 108

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS . DLLAVE

    DLLAVE          shift and go to state 109


state 109

    (64) FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .

    $end            reduce using rule 64 (FUNCTIONS -> FUNCTION VARIABLE LPAREN MASPARAMETROS RPAREN ILLAVE RETURN MASPARAMETROS DLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 79 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 79 resolved as shift
WARNING: shift/reduce conflict for MAS in state 80 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 80 resolved as shift
WARNING: shift/reduce conflict for MAS in state 83 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 83 resolved as shift
WARNING: shift/reduce conflict for MAS in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 84 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 84 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (EXPRESSION -> NUMERO)
WARNING: rejected rule (tipos_datos -> NUMERO) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> FLOTANTE)
WARNING: rejected rule (tipos_datos -> FLOTANTE) in state 8
WARNING: reduce/reduce conflict in state 69 resolved using rule (EXPRESSION_MAT_NUMERO -> VARIABLE OPERATOR_MAT VARIABLE)
WARNING: rejected rule (EXPRESSION_MAT_FLOTANTE -> VARIABLE OPERATOR_MAT VARIABLE) in state 69
